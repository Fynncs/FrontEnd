{
    "pipes": [],
    "interfaces": [
        {
            "name": "IBill",
            "id": "interface-IBill-e85d13a3fff92eb762ae242e52708124d89f9af2c19bf5e86bab3433b2dc4c217ed2efd2f92e5c647465c3690b4130e066b5029a46549caf51781b218e8133b6",
            "file": "src/app/core/models/i-bill.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ModelState } from \"./state.model\";\r\n\r\nexport interface IBill extends ModelState<IBill> {\r\n  id?: number;\r\n  description?: string;\r\n  amount?: number;\r\n  dueDate?: string;\r\n  status?: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "dueDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "ModelState"
            ]
        },
        {
            "name": "ICategory",
            "id": "interface-ICategory-49f0eedb23e064f1416eafcee0d710b489ca6197b411582f9a2c2e44a549246c486c2658f8a5ecb20edd79038cff7e9984131e7d68bac2d1981124915d4615ec",
            "file": "src/app/core/models/classification/i-category.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ModelState } from \"../state.model\";\r\n\r\n\r\nexport interface ICategory extends ModelState<ICategory> {\r\n    name?: string,\r\n    color?: string,\r\n    userId?: string,\r\n    status?: string,\r\n    id?: string\r\n}\r\n",
            "properties": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "userId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "ModelState"
            ]
        },
        {
            "name": "IFinancialData",
            "id": "interface-IFinancialData-93e5bac9ce781ea03249a21c0b1a81e145d6e986a5eb9a81bb50376f065dafb3d4c1a0d7d66651ca1b3d8145cd601e8e97a630d1a1a5205b98c1134b26bf7e3f",
            "file": "src/app/core/models/i-financial-data.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ModelState } from \"./state.model\";\r\n\r\nexport interface IFinancialData extends ModelState<IFinancialData> {\r\n    balance?: number;\r\n    budget?: number;\r\n    expenses?: number;\r\n    income?: number;\r\n    savings?: number;\r\n    debt?: number;\r\n    investment?: number;\r\n    currency?: string;\r\n    lastUpdated?: Date;\r\n  }\r\n  ",
            "properties": [
                {
                    "name": "balance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "budget",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "currency",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "debt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "expenses",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "income",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "investment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "lastUpdated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "savings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "ModelState"
            ]
        },
        {
            "name": "IModelState",
            "id": "interface-IModelState-462d8adb6c7234f5e4c241be75d68c140277966d045031dcaa0b18293ff8bd9e00522fab61d788da1f7610799ac5071e5a441643994fbb253a7cbff303c86b8d",
            "file": "src/app/core/models/i-state.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { State } from '../enum/state.enum';\r\n\r\n/**\r\n * ModelState Interface\r\n * Basic contract for any model class with state.\r\n */\r\nexport interface IModelState<T> {\r\n  data: T;\r\n  state: State;\r\n  getModifiedAttributes(): (keyof T)[];\r\n  clearModifiedAttributes(): void;\r\n  markAsNew(): void;\r\n  markAsModified(): void;\r\n  markAsDeleted(): void;\r\n  restore(): void;\r\n}\r\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "State",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 173,
            "description": "<p>ModelState Interface\nBasic contract for any model class with state.</p>\n",
            "rawdescription": "\n\nModelState Interface\nBasic contract for any model class with state.\n",
            "methods": [
                {
                    "name": "clearModifiedAttributes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getModifiedAttributes",
                    "args": [],
                    "optional": false,
                    "returnType": "[]",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "markAsDeleted",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "markAsModified",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "markAsNew",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "restore",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": []
        },
        {
            "name": "IPaymentStatus",
            "id": "interface-IPaymentStatus-fc191601c48f03f8c5ea94dd4f86e1cbef81dab0a30e2d2c60e20b65898b8455a67ad4925f71c221cf19fc916c6584fbca9acc32feac7af15b1c23276af125ea",
            "file": "src/app/core/models/i-payment-status.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IBill } from \"./i-bill.model\";\r\nimport { ModelState } from \"./state.model\";\r\n\r\nexport interface IPaymentStatus extends ModelState<IPaymentStatus>{\r\n    paidBills?: IBill[];\r\n    unpaidBills?: IBill[];\r\n  }",
            "properties": [
                {
                    "name": "paidBills",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IBill[]",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "unpaidBills",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IBill[]",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "ModelState"
            ]
        },
        {
            "name": "IUser",
            "id": "interface-IUser-ae7cf9bb87f4d46734c3bc637b9d8b96c79af3ba42e0ee17655b8caf81853f44cace00986d8a0d1e7b27ee5317efc92b8feb91c86a899d31c4e760a129e9ac32",
            "file": "src/app/core/models/i-user.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IFinancialData, ModelState } from \"@fynnc.models\";\r\nimport { IPaymentStatus } from \"./i-payment-status.model\";\r\n\r\nexport interface IUser extends ModelState<IUser> {\r\n  id?: number;\r\n  name?: string;\r\n  fullName?: string;\r\n  email?: string;\r\n  phone?: string;\r\n  birthDate?: Date;\r\n  gender?: 'male' | 'female' | 'other' | 'not informed';\r\n  nationality?: string;\r\n  maritalStatus?: 'single' | 'married' | 'divorced' | 'widowed' | 'other';\r\n  profession?: string;\r\n  academicBackground?: string;\r\n  username?: string;\r\n  password?: string;\r\n  financial?: IFinancialData[];\r\n  paymentStatus?: IPaymentStatus[];\r\n}\r\n",
            "properties": [
                {
                    "name": "academicBackground",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "birthDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "financial",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IFinancialData[]",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "fullName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "gender",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"male\" | \"female\" | \"other\" | \"not informed\"",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "maritalStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"single\" | \"married\" | \"divorced\" | \"widowed\" | \"other\"",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "nationality",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "paymentStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IPaymentStatus[]",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "phone",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "profession",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "ModelState"
            ]
        }
    ],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-2e79cb9bd4027b879837b58ac9a028c26d7462baaf39cdadd07bb59cdb6f385878d164d2a0af5a510e4b2addc54af1e86225e6ade96b5a4845f2beac1b91c101",
            "file": "src/app/core/components/auth/service/auth.service.ts",
            "properties": [
                {
                    "name": "apiUrl",
                    "defaultValue": "'https://your-backend.com/api/login'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getToken",
                    "args": [],
                    "optional": false,
                    "returnType": "string | null",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRetrieves the stored token.\n",
                    "description": "<p>Retrieves the stored token.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1447,
                                "end": 1454,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>string | null</p>\n"
                        }
                    ]
                },
                {
                    "name": "getUserInfo",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDecodes user information from the token (optional).\n",
                    "description": "<p>Decodes user information from the token (optional).</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1629,
                                "end": 1636,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>any</p>\n"
                        }
                    ]
                },
                {
                    "name": "isAuthenticated",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if the user is authenticated.\n",
                    "description": "<p>Checks if the user is authenticated.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1265,
                                "end": 1272,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>boolean</p>\n"
                        }
                    ]
                },
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMakes the login request to the backend and saves the token.\n",
                    "description": "<p>Makes the login request to the backend and saves the token.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 516,
                                "end": 521,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "email"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 510,
                                "end": 515,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>User&#39;s email.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 551,
                                "end": 559,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "password"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 545,
                                "end": 550,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>User&#39;s password.</li>\n</ul>\n"
                        },
                        {
                            "tagName": {
                                "pos": 586,
                                "end": 593,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Observable with the backend response.</p>\n"
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRemoves the token and ends the user's session.\n",
                    "description": "<p>Removes the token and ends the user&#39;s session.</p>\n"
                },
                {
                    "name": "saveToken",
                    "args": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSaves the token in localStorage after successful authentication.\n",
                    "description": "<p>Saves the token in localStorage after successful authentication.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 886,
                                "end": 891,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "token"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 880,
                                "end": 885,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Token generated after successful authentication.</li>\n</ul>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root' // Garante que o serviço está disponível globalmente\r\n})\r\nexport class AuthService {\r\n  private apiUrl = 'https://your-backend.com/api/login'; \r\n\r\n  constructor(private router: Router, private http: HttpClient) {}\r\n\r\n  /**\r\n   * Makes the login request to the backend and saves the token.\r\n   * @param email - User's email.\r\n   * @param password - User's password.\r\n   * @returns Observable with the backend response.\r\n   */\r\n  login(email?: string, password?: string): Observable<any> {\r\n    const body = { email, password };\r\n    return this.http.post(this.apiUrl, body);\r\n  }\r\n\r\n  /**\r\n   * Saves the token in localStorage after successful authentication.\r\n   * @param token - Token generated after successful authentication.\r\n   */\r\n  saveToken(token: string): void {\r\n    localStorage.setItem('token', token);\r\n  }\r\n\r\n  /**\r\n   * Removes the token and ends the user's session.\r\n   */\r\n  logout(): void {\r\n    localStorage.removeItem('token');\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  /**\r\n   * Checks if the user is authenticated.\r\n   * @returns boolean\r\n   */\r\n  isAuthenticated(): boolean {\r\n    const token = localStorage.getItem('token');\r\n    return !!token; \r\n  }\r\n\r\n  /**\r\n   * Retrieves the stored token.\r\n   * @returns string | null\r\n   */\r\n  getToken(): string | null {\r\n    return localStorage.getItem('token');\r\n  }\r\n\r\n  /**\r\n   * Decodes user information from the token (optional).\r\n   * @returns any\r\n   */\r\n  getUserInfo(): any {\r\n    const token = this.getToken();\r\n    if (!token) return null;\r\n\r\n    try {\r\n      const payload = token.split('.')[1]; \r\n      return JSON.parse(atob(payload));\r\n    } catch (error) {\r\n      console.error('Error decoding the token:', error);\r\n      return null;\r\n    }\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "EstadoService",
            "id": "injectable-EstadoService-dc7b44d713a4959259f5a3516adc1527d547d4d12ad85202150e090986d8c33c3f207c5a3abf7b6b8181efc058c145f2e7d260ff2909972112b3558ca523cf66",
            "file": "src/app/core/services/state.service.ts",
            "properties": [
                {
                    "name": "estadoSubject",
                    "defaultValue": "new BehaviorSubject<State>(State.ORIGINAL)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getEstado$",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<State>",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setEstado",
                    "args": [
                        {
                            "name": "novoEstado",
                            "type": "State",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "novoEstado",
                            "type": "State",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { State } from '../enum/state.enum';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EstadoService {\r\n  private estadoSubject = new BehaviorSubject<State>(State.ORIGINAL);\r\n\r\n  getEstado$(): Observable<State> {\r\n    return this.estadoSubject.asObservable();\r\n  }\r\n\r\n  setEstado(novoEstado: State): void {\r\n    this.estadoSubject.next(novoEstado);\r\n  }\r\n}\r\n",
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "AuthGuard",
            "id": "injectable-AuthGuard-285e7a501ab9956515416e692e060ff74a12b46dec61ca55466920374ac056ae55fad694c26f9e23438a977731b9a33a1d49c5270c4fbab9fe0b828441064dd7",
            "file": "src/app/auth.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "next",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | Promise | boolean",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMethod that checks if the user is authenticated.\nIf authenticated, allows access to the route.\nOtherwise, redirects to the login page.\n",
                    "description": "<p>Method that checks if the user is authenticated.\nIf authenticated, allows access to the route.\nOtherwise, redirects to the login page.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 591,
                                "end": 595,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "next"
                            },
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 585,
                                "end": 590,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Snapshot of the activated route.</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 642,
                                "end": 647,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "state"
                            },
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 636,
                                "end": 641,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>State of the route.</li>\n</ul>\n"
                        },
                        {
                            "tagName": {
                                "pos": 675,
                                "end": 682,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Observable<boolean> or Promise<boolean> or boolean</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './core/components/auth/service/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n/**\r\n * Method that checks if the user is authenticated.\r\n * If authenticated, allows access to the route.\r\n * Otherwise, redirects to the login page.\r\n * @param next - Snapshot of the activated route.\r\n * @param state - State of the route.\r\n * @returns Observable<boolean> or Promise<boolean> or boolean\r\n */\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.authService.isAuthenticated()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']); \r\n      return false;\r\n    }\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "guard"
        }
    ],
    "interceptors": [],
    "classes": [
        {
            "name": "Bill",
            "id": "class-Bill-a80bedfa41297d029739a970eb3c6289a17e5551b7c6a234bea5399ce6094610a56a322f5177fab068cccdddf4fd8b3dc8bc46d9db6f89d1be377738200d1c7d",
            "file": "src/app/core/models/bill.mode.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { IBill } from \"./i-bill.model\";\r\nimport { ModelState } from \"./state.model\";\r\n\r\n\r\nexport class Bill extends ModelState<IBill> implements IBill {\r\n  private _id?: number;\r\n  private _description?: string;\r\n  private _amount?: number;\r\n  private _dueDate?: string;\r\n  private _status?: string;\r\n\r\n  constructor(bill: IBill = {} as IBill) {\r\n    super(bill);\r\n    this._id = bill.id;\r\n    this._description = bill.description;\r\n    this._amount = bill.amount;\r\n    this._dueDate = bill.dueDate;\r\n    this._status = bill.status;\r\n  }\r\n\r\n  get id(): number | undefined {\r\n    return this._id;\r\n  }\r\n\r\n  set id(value: number | undefined) {\r\n    this._id = value;\r\n  }\r\n\r\n  get description(): string | undefined {\r\n    return this._description;\r\n  }\r\n\r\n  set description(value: string | undefined) {\r\n    this._description = value;\r\n  }\r\n\r\n  get amount(): number | undefined {\r\n    return this._amount;\r\n  }\r\n\r\n  set amount(value: number | undefined) {\r\n    this._amount = value;\r\n  }\r\n\r\n  get dueDate(): string | undefined {\r\n    return this._dueDate;\r\n  }\r\n\r\n  set dueDate(value: string | undefined) {\r\n    this._dueDate = value;\r\n  }\r\n\r\n  get status(): string | undefined {\r\n    return this._status;\r\n  }\r\n\r\n  set status(value: string | undefined) {\r\n    this._status = value;\r\n  }\r\n\r\n  toJSON(): Partial<IBill> {\r\n    return {\r\n      id: this.id,\r\n      description: this.description,\r\n      amount: this.amount,\r\n      dueDate: this.dueDate,\r\n      status: this.status,\r\n    };\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "bill",
                        "type": "IBill",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "{} as IBill"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "bill",
                        "type": "IBill",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "{} as IBill",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "_amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_dueDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Original data of the model.</p>\n",
                    "line": 13,
                    "rawdescription": "\nOriginal data of the model.",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "_modifiedAttributes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Set<T>",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Set that stores modified attributes.</p>\n",
                    "line": 25,
                    "rawdescription": "\nSet that stores modified attributes.",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "_proxy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Proxy that intercepts modifications to the data.</p>\n",
                    "line": 16,
                    "rawdescription": "\nProxy that intercepts modifications to the data.",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "_state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "State",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Current state of the model (ORIGINAL, NEW, MODIFIED, DELETED).</p>\n",
                    "line": 19,
                    "rawdescription": "\nCurrent state of the model (ORIGINAL, NEW, MODIFIED, DELETED).",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "_stateSubject",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<State>",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Observable that notifies state changes.</p>\n",
                    "line": 22,
                    "rawdescription": "\nObservable that notifies state changes.",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                }
            ],
            "methods": [
                {
                    "name": "toJSON",
                    "args": [],
                    "optional": false,
                    "returnType": "Partial<IBill>",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "_createProxy",
                    "args": [
                        {
                            "name": "obj",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreates a Proxy to intercept changes to the model's data.\n",
                    "description": "<p>Creates a Proxy to intercept changes to the model&#39;s data.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1443,
                                "end": 1446,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "obj"
                            },
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1433,
                                "end": 1438,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Original model object.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 1439,
                                "end": 1442,
                                "kind": 309,
                                "id": 0,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "type": {
                                    "pos": 1440,
                                    "end": 1441,
                                    "kind": 183,
                                    "id": 0,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "typeName": {
                                        "pos": 1440,
                                        "end": 1441,
                                        "kind": 80,
                                        "id": 0,
                                        "flags": 16777216,
                                        "transformFlags": 0,
                                        "escapedText": "T"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 1479,
                                "end": 1486,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Proxy of the model object.</p>\n",
                            "returnType": ""
                        },
                        {
                            "tagName": {
                                "pos": 1525,
                                "end": 1532,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "private"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "clearModifiedAttributes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nClears all attributes marked as modified.\n",
                    "description": "<p>Clears all attributes marked as modified.</p>\n",
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "getModifiedAttributes",
                    "args": [],
                    "optional": false,
                    "returnType": "[]",
                    "typeParameters": [],
                    "line": 144,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGets a list of modified attributes in the model.\n",
                    "description": "<p>Gets a list of modified attributes in the model.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 3975,
                                "end": 3982,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>List of modified attributes.</p>\n",
                            "returnType": "[]"
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "isDeleted",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 175,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if the current state is DELETED.\n",
                    "description": "<p>Checks if the current state is DELETED.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4707,
                                "end": 4714,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the state is DELETED.</p>\n",
                            "returnType": "boolean"
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "isModified",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if the current state is MODIFIED.\n",
                    "description": "<p>Checks if the current state is MODIFIED.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4513,
                                "end": 4520,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the state is MODIFIED.</p>\n",
                            "returnType": "boolean"
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "isNew",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if the current state is NEW.\n",
                    "description": "<p>Checks if the current state is NEW.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4333,
                                "end": 4340,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the state is NEW.</p>\n",
                            "returnType": "boolean"
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "isOriginal",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 183,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if the current state is ORIGINAL.\n",
                    "description": "<p>Checks if the current state is ORIGINAL.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4899,
                                "end": 4906,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the state is ORIGINAL.</p>\n",
                            "returnType": "boolean"
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "markAsDeleted",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMarks the model as DELETED, if allowed.\n",
                    "description": "<p>Marks the model as DELETED, if allowed.</p>\n",
                    "jsdoctags": [],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "markAsModified",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMarks the model as MODIFIED, if applicable.\n",
                    "description": "<p>Marks the model as MODIFIED, if applicable.</p>\n",
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "markAsNew",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMarks the model as NEW.\n",
                    "description": "<p>Marks the model as NEW.</p>\n",
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "restore",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRestores the model to the ORIGINAL state.\nClears the modified attributes.\n",
                    "description": "<p>Restores the model to the ORIGINAL state.\nClears the modified attributes.</p>\n",
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "setState",
                    "args": [
                        {
                            "name": "newState",
                            "type": "State",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChanges the current state of the model and notifies observers.\n",
                    "description": "<p>Changes the current state of the model and notifies observers.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2845,
                                "end": 2853,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "newState"
                            },
                            "type": "State",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2831,
                                "end": 2836,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>New state to be set.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 2837,
                                "end": 2844,
                                "kind": 309,
                                "id": 0,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "type": {
                                    "pos": 2838,
                                    "end": 2843,
                                    "kind": 183,
                                    "id": 0,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "typeName": {
                                        "pos": 2838,
                                        "end": 2843,
                                        "kind": 80,
                                        "id": 0,
                                        "flags": 16777216,
                                        "transformFlags": 0,
                                        "escapedText": "State"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 2884,
                                "end": 2891,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "private"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": [
                "ModelState"
            ],
            "accessors": {
                "id": {
                    "name": "id",
                    "setSignature": {
                        "name": "id",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "number | undefined",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 25,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "number | undefined",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "id",
                        "type": "",
                        "returnType": "number | undefined",
                        "line": 21
                    }
                },
                "description": {
                    "name": "description",
                    "setSignature": {
                        "name": "description",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 33,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "description",
                        "type": "",
                        "returnType": "string | undefined",
                        "line": 29
                    }
                },
                "amount": {
                    "name": "amount",
                    "setSignature": {
                        "name": "amount",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "number | undefined",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 41,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "number | undefined",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "amount",
                        "type": "",
                        "returnType": "number | undefined",
                        "line": 37
                    }
                },
                "dueDate": {
                    "name": "dueDate",
                    "setSignature": {
                        "name": "dueDate",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 49,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "dueDate",
                        "type": "",
                        "returnType": "string | undefined",
                        "line": 45
                    }
                },
                "status": {
                    "name": "status",
                    "setSignature": {
                        "name": "status",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 57,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "status",
                        "type": "",
                        "returnType": "string | undefined",
                        "line": 53
                    }
                }
            },
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "IBill"
            ]
        },
        {
            "name": "Category",
            "id": "class-Category-6128841c10751d4ea1f3126cc8d778b50e124bcf0566a36453d56da812086bf5b7d643792f0923377741f87555ea65a6332b924dd5dec42e1bf05c98d4755434",
            "file": "src/app/core/models/classification/category.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ModelState } from \"../state.model\";\r\nimport { ICategory } from \"./i-category.model\";\r\n\r\nexport class Category extends ModelState<ICategory> implements ICategory {\r\n  private _name?: string;\r\n  private _color?: string;\r\n  private _userId?: string;\r\n  private _status?: string;\r\n  private _id?: string;\r\n  private _dueDate?: string;  \r\n\r\n  constructor(category: ICategory = {} as ICategory) {\r\n    super(category);\r\n    this._name = category.name;\r\n    this._color = category.color;\r\n    this._userId = category.userId;\r\n    this._status = category.status;\r\n    this._id = category.id;\r\n  }\r\n\r\n  get id(): string | undefined {\r\n    return this._id;\r\n  }\r\n\r\n  set id(value: string | undefined) {\r\n    this._id = value;\r\n  }\r\n\r\n  get name(): string | undefined {\r\n    return this._name;\r\n  }\r\n\r\n  set name(value: string | undefined) {\r\n    this._name = value;\r\n  }\r\n\r\n  get color(): string | undefined {\r\n    return this._color;\r\n  }\r\n\r\n  set color(value: string | undefined) {\r\n    this._color = value;\r\n  }\r\n\r\n  get userId(): string | undefined {\r\n    return this._userId;\r\n  }\r\n\r\n  set userId(value: string | undefined) {\r\n    this._userId = value;\r\n  }\r\n\r\n  get dueDate(): string | undefined {\r\n    return this._dueDate;\r\n  }\r\n\r\n  set dueDate(value: string | undefined) {\r\n    this._dueDate = value;\r\n  }\r\n\r\n  get status(): string | undefined {\r\n    return this._status;\r\n  }\r\n\r\n  set status(value: string | undefined) {\r\n    this._status = value;\r\n  }\r\n\r\n  toJSON(): Partial<ICategory> {  // Corrigido para ICategory\r\n    return {\r\n      id: this.id,\r\n      name: this.name,\r\n      color: this.color,\r\n      userId: this.userId,\r\n\r\n      status: this.status,\r\n    };\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "category",
                        "type": "ICategory",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "{} as ICategory"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "category",
                        "type": "ICategory",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "{} as ICategory",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "_color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_dueDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_userId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Original data of the model.</p>\n",
                    "line": 13,
                    "rawdescription": "\nOriginal data of the model.",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "_modifiedAttributes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Set<T>",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Set that stores modified attributes.</p>\n",
                    "line": 25,
                    "rawdescription": "\nSet that stores modified attributes.",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "_proxy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Proxy that intercepts modifications to the data.</p>\n",
                    "line": 16,
                    "rawdescription": "\nProxy that intercepts modifications to the data.",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "_state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "State",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Current state of the model (ORIGINAL, NEW, MODIFIED, DELETED).</p>\n",
                    "line": 19,
                    "rawdescription": "\nCurrent state of the model (ORIGINAL, NEW, MODIFIED, DELETED).",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "_stateSubject",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<State>",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Observable that notifies state changes.</p>\n",
                    "line": 22,
                    "rawdescription": "\nObservable that notifies state changes.",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                }
            ],
            "methods": [
                {
                    "name": "toJSON",
                    "args": [],
                    "optional": false,
                    "returnType": "Partial<ICategory>",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "_createProxy",
                    "args": [
                        {
                            "name": "obj",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreates a Proxy to intercept changes to the model's data.\n",
                    "description": "<p>Creates a Proxy to intercept changes to the model&#39;s data.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1443,
                                "end": 1446,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "obj"
                            },
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1433,
                                "end": 1438,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Original model object.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 1439,
                                "end": 1442,
                                "kind": 309,
                                "id": 0,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "type": {
                                    "pos": 1440,
                                    "end": 1441,
                                    "kind": 183,
                                    "id": 0,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "typeName": {
                                        "pos": 1440,
                                        "end": 1441,
                                        "kind": 80,
                                        "id": 0,
                                        "flags": 16777216,
                                        "transformFlags": 0,
                                        "escapedText": "T"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 1479,
                                "end": 1486,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Proxy of the model object.</p>\n",
                            "returnType": ""
                        },
                        {
                            "tagName": {
                                "pos": 1525,
                                "end": 1532,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "private"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "clearModifiedAttributes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nClears all attributes marked as modified.\n",
                    "description": "<p>Clears all attributes marked as modified.</p>\n",
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "getModifiedAttributes",
                    "args": [],
                    "optional": false,
                    "returnType": "[]",
                    "typeParameters": [],
                    "line": 144,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGets a list of modified attributes in the model.\n",
                    "description": "<p>Gets a list of modified attributes in the model.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 3975,
                                "end": 3982,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>List of modified attributes.</p>\n",
                            "returnType": "[]"
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "isDeleted",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 175,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if the current state is DELETED.\n",
                    "description": "<p>Checks if the current state is DELETED.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4707,
                                "end": 4714,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the state is DELETED.</p>\n",
                            "returnType": "boolean"
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "isModified",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if the current state is MODIFIED.\n",
                    "description": "<p>Checks if the current state is MODIFIED.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4513,
                                "end": 4520,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the state is MODIFIED.</p>\n",
                            "returnType": "boolean"
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "isNew",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if the current state is NEW.\n",
                    "description": "<p>Checks if the current state is NEW.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4333,
                                "end": 4340,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the state is NEW.</p>\n",
                            "returnType": "boolean"
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "isOriginal",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 183,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if the current state is ORIGINAL.\n",
                    "description": "<p>Checks if the current state is ORIGINAL.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4899,
                                "end": 4906,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the state is ORIGINAL.</p>\n",
                            "returnType": "boolean"
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "markAsDeleted",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMarks the model as DELETED, if allowed.\n",
                    "description": "<p>Marks the model as DELETED, if allowed.</p>\n",
                    "jsdoctags": [],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "markAsModified",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMarks the model as MODIFIED, if applicable.\n",
                    "description": "<p>Marks the model as MODIFIED, if applicable.</p>\n",
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "markAsNew",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMarks the model as NEW.\n",
                    "description": "<p>Marks the model as NEW.</p>\n",
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "restore",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRestores the model to the ORIGINAL state.\nClears the modified attributes.\n",
                    "description": "<p>Restores the model to the ORIGINAL state.\nClears the modified attributes.</p>\n",
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "setState",
                    "args": [
                        {
                            "name": "newState",
                            "type": "State",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChanges the current state of the model and notifies observers.\n",
                    "description": "<p>Changes the current state of the model and notifies observers.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2845,
                                "end": 2853,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "newState"
                            },
                            "type": "State",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2831,
                                "end": 2836,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>New state to be set.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 2837,
                                "end": 2844,
                                "kind": 309,
                                "id": 0,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "type": {
                                    "pos": 2838,
                                    "end": 2843,
                                    "kind": 183,
                                    "id": 0,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "typeName": {
                                        "pos": 2838,
                                        "end": 2843,
                                        "kind": 80,
                                        "id": 0,
                                        "flags": 16777216,
                                        "transformFlags": 0,
                                        "escapedText": "State"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 2884,
                                "end": 2891,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "private"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": [
                "ModelState"
            ],
            "accessors": {
                "id": {
                    "name": "id",
                    "setSignature": {
                        "name": "id",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 25,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "id",
                        "type": "",
                        "returnType": "string | undefined",
                        "line": 21
                    }
                },
                "name": {
                    "name": "name",
                    "setSignature": {
                        "name": "name",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 33,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "name",
                        "type": "",
                        "returnType": "string | undefined",
                        "line": 29
                    }
                },
                "color": {
                    "name": "color",
                    "setSignature": {
                        "name": "color",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 41,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "color",
                        "type": "",
                        "returnType": "string | undefined",
                        "line": 37
                    }
                },
                "userId": {
                    "name": "userId",
                    "setSignature": {
                        "name": "userId",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 49,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "userId",
                        "type": "",
                        "returnType": "string | undefined",
                        "line": 45
                    }
                },
                "dueDate": {
                    "name": "dueDate",
                    "setSignature": {
                        "name": "dueDate",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 57,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "dueDate",
                        "type": "",
                        "returnType": "string | undefined",
                        "line": 53
                    }
                },
                "status": {
                    "name": "status",
                    "setSignature": {
                        "name": "status",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 65,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "status",
                        "type": "",
                        "returnType": "string | undefined",
                        "line": 61
                    }
                }
            },
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "ICategory"
            ]
        },
        {
            "name": "FinancialData",
            "id": "class-FinancialData-b657fd76cfa9089f97665e2964a75d7fd5f462909166a96af75fc4e872bf73db44c9da4a469719c29c1551951e0fa8746e61530adddff5f0f9a93307dadf1277",
            "file": "src/app/core/models/financial-data.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ModelState, IFinancialData } from '@fynnc.models';\r\n\r\nexport class FinancialData extends ModelState<IFinancialData> implements IFinancialData {\r\n  private _balance?: number;\r\n  private _budget?: number;\r\n  private _expenses?: number;\r\n  private _income?: number;\r\n  private _savings?: number;\r\n  private _debt?: number;\r\n  private _investment?: number;\r\n  private _currency?: string;\r\n  private _lastUpdated?: Date;\r\n\r\n  constructor(financialData: IFinancialData = {} as IFinancialData) {\r\n    super(financialData);\r\n    this._balance = financialData.balance;\r\n    this._budget = financialData.budget;\r\n    this._expenses = financialData.expenses;\r\n    this._income = financialData.income;\r\n    this._savings = financialData.savings;\r\n    this._debt = financialData.debt;\r\n    this._investment = financialData.investment;\r\n    this._currency = financialData.currency;\r\n    this._lastUpdated = financialData.lastUpdated;\r\n  }\r\n\r\n  get balance(): number | undefined {\r\n    return this._balance;\r\n  }\r\n  set balance(value: number) {\r\n    this._balance = value;\r\n  }\r\n\r\n  get budget(): number | undefined {\r\n    return this._budget;\r\n  }\r\n  set budget(value: number) {\r\n    this._budget = value;\r\n  }\r\n\r\n  get expenses(): number | undefined {\r\n    return this._expenses;\r\n  }\r\n  set expenses(value: number) {\r\n    this._expenses = value;\r\n  }\r\n\r\n  get income(): number | undefined {\r\n    return this._income;\r\n  }\r\n  set income(value: number) {\r\n    this._income = value;\r\n  }\r\n\r\n  get savings(): number | undefined {\r\n    return this._savings;\r\n  }\r\n  set savings(value: number) {\r\n    this._savings = value;\r\n  }\r\n\r\n  get debt(): number | undefined {\r\n    return this._debt;\r\n  }\r\n  set debt(value: number) {\r\n    this._debt = value;\r\n  }\r\n\r\n  get investment(): number | undefined {\r\n    return this._investment;\r\n  }\r\n  set investment(value: number) {\r\n    this._investment = value;\r\n  }\r\n\r\n  get currency(): string | undefined {\r\n    return this._currency;\r\n  }\r\n  set currency(value: string) {\r\n    this._currency = value;\r\n  }\r\n\r\n  get lastUpdated(): Date | undefined {\r\n    return this._lastUpdated;\r\n  }\r\n  set lastUpdated(value: Date) {\r\n    this._lastUpdated = value;\r\n  }\r\n\r\n  toJSON(): Partial<IFinancialData> {\r\n    return {\r\n      balance: this.balance,\r\n      budget: this.budget,\r\n      expenses: this.expenses,\r\n      income: this.income,\r\n      savings: this.savings,\r\n      debt: this.debt,\r\n      investment: this.investment,\r\n      currency: this.currency,\r\n      lastUpdated: this.lastUpdated,\r\n    };\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "financialData",
                        "type": "IFinancialData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "{} as IFinancialData"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "financialData",
                        "type": "IFinancialData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "{} as IFinancialData",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "_balance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_budget",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_currency",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_debt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_expenses",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_income",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_investment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_lastUpdated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_savings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Original data of the model.</p>\n",
                    "line": 13,
                    "rawdescription": "\nOriginal data of the model.",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "_modifiedAttributes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Set<T>",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Set that stores modified attributes.</p>\n",
                    "line": 25,
                    "rawdescription": "\nSet that stores modified attributes.",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "_proxy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Proxy that intercepts modifications to the data.</p>\n",
                    "line": 16,
                    "rawdescription": "\nProxy that intercepts modifications to the data.",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "_state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "State",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Current state of the model (ORIGINAL, NEW, MODIFIED, DELETED).</p>\n",
                    "line": 19,
                    "rawdescription": "\nCurrent state of the model (ORIGINAL, NEW, MODIFIED, DELETED).",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "_stateSubject",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<State>",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Observable that notifies state changes.</p>\n",
                    "line": 22,
                    "rawdescription": "\nObservable that notifies state changes.",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                }
            ],
            "methods": [
                {
                    "name": "toJSON",
                    "args": [],
                    "optional": false,
                    "returnType": "Partial<IFinancialData>",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "_createProxy",
                    "args": [
                        {
                            "name": "obj",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreates a Proxy to intercept changes to the model's data.\n",
                    "description": "<p>Creates a Proxy to intercept changes to the model&#39;s data.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1443,
                                "end": 1446,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "obj"
                            },
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1433,
                                "end": 1438,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Original model object.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 1439,
                                "end": 1442,
                                "kind": 309,
                                "id": 0,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "type": {
                                    "pos": 1440,
                                    "end": 1441,
                                    "kind": 183,
                                    "id": 0,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "typeName": {
                                        "pos": 1440,
                                        "end": 1441,
                                        "kind": 80,
                                        "id": 0,
                                        "flags": 16777216,
                                        "transformFlags": 0,
                                        "escapedText": "T"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 1479,
                                "end": 1486,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Proxy of the model object.</p>\n",
                            "returnType": ""
                        },
                        {
                            "tagName": {
                                "pos": 1525,
                                "end": 1532,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "private"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "clearModifiedAttributes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nClears all attributes marked as modified.\n",
                    "description": "<p>Clears all attributes marked as modified.</p>\n",
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "getModifiedAttributes",
                    "args": [],
                    "optional": false,
                    "returnType": "[]",
                    "typeParameters": [],
                    "line": 144,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGets a list of modified attributes in the model.\n",
                    "description": "<p>Gets a list of modified attributes in the model.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 3975,
                                "end": 3982,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>List of modified attributes.</p>\n",
                            "returnType": "[]"
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "isDeleted",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 175,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if the current state is DELETED.\n",
                    "description": "<p>Checks if the current state is DELETED.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4707,
                                "end": 4714,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the state is DELETED.</p>\n",
                            "returnType": "boolean"
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "isModified",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if the current state is MODIFIED.\n",
                    "description": "<p>Checks if the current state is MODIFIED.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4513,
                                "end": 4520,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the state is MODIFIED.</p>\n",
                            "returnType": "boolean"
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "isNew",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if the current state is NEW.\n",
                    "description": "<p>Checks if the current state is NEW.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4333,
                                "end": 4340,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the state is NEW.</p>\n",
                            "returnType": "boolean"
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "isOriginal",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 183,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if the current state is ORIGINAL.\n",
                    "description": "<p>Checks if the current state is ORIGINAL.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4899,
                                "end": 4906,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the state is ORIGINAL.</p>\n",
                            "returnType": "boolean"
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "markAsDeleted",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMarks the model as DELETED, if allowed.\n",
                    "description": "<p>Marks the model as DELETED, if allowed.</p>\n",
                    "jsdoctags": [],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "markAsModified",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMarks the model as MODIFIED, if applicable.\n",
                    "description": "<p>Marks the model as MODIFIED, if applicable.</p>\n",
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "markAsNew",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMarks the model as NEW.\n",
                    "description": "<p>Marks the model as NEW.</p>\n",
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "restore",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRestores the model to the ORIGINAL state.\nClears the modified attributes.\n",
                    "description": "<p>Restores the model to the ORIGINAL state.\nClears the modified attributes.</p>\n",
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "setState",
                    "args": [
                        {
                            "name": "newState",
                            "type": "State",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChanges the current state of the model and notifies observers.\n",
                    "description": "<p>Changes the current state of the model and notifies observers.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2845,
                                "end": 2853,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "newState"
                            },
                            "type": "State",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2831,
                                "end": 2836,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>New state to be set.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 2837,
                                "end": 2844,
                                "kind": 309,
                                "id": 0,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "type": {
                                    "pos": 2838,
                                    "end": 2843,
                                    "kind": 183,
                                    "id": 0,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "typeName": {
                                        "pos": 2838,
                                        "end": 2843,
                                        "kind": 80,
                                        "id": 0,
                                        "flags": 16777216,
                                        "transformFlags": 0,
                                        "escapedText": "State"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 2884,
                                "end": 2891,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "private"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": [
                "ModelState"
            ],
            "accessors": {
                "balance": {
                    "name": "balance",
                    "setSignature": {
                        "name": "balance",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 30,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "balance",
                        "type": "",
                        "returnType": "number | undefined",
                        "line": 27
                    }
                },
                "budget": {
                    "name": "budget",
                    "setSignature": {
                        "name": "budget",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 37,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "budget",
                        "type": "",
                        "returnType": "number | undefined",
                        "line": 34
                    }
                },
                "expenses": {
                    "name": "expenses",
                    "setSignature": {
                        "name": "expenses",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 44,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "expenses",
                        "type": "",
                        "returnType": "number | undefined",
                        "line": 41
                    }
                },
                "income": {
                    "name": "income",
                    "setSignature": {
                        "name": "income",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 51,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "income",
                        "type": "",
                        "returnType": "number | undefined",
                        "line": 48
                    }
                },
                "savings": {
                    "name": "savings",
                    "setSignature": {
                        "name": "savings",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 58,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "savings",
                        "type": "",
                        "returnType": "number | undefined",
                        "line": 55
                    }
                },
                "debt": {
                    "name": "debt",
                    "setSignature": {
                        "name": "debt",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 65,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "debt",
                        "type": "",
                        "returnType": "number | undefined",
                        "line": 62
                    }
                },
                "investment": {
                    "name": "investment",
                    "setSignature": {
                        "name": "investment",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 72,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "investment",
                        "type": "",
                        "returnType": "number | undefined",
                        "line": 69
                    }
                },
                "currency": {
                    "name": "currency",
                    "setSignature": {
                        "name": "currency",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 79,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "currency",
                        "type": "",
                        "returnType": "string | undefined",
                        "line": 76
                    }
                },
                "lastUpdated": {
                    "name": "lastUpdated",
                    "setSignature": {
                        "name": "lastUpdated",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "Date",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 86,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "Date",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "lastUpdated",
                        "type": "",
                        "returnType": "Date | undefined",
                        "line": 83
                    }
                }
            },
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "IFinancialData"
            ]
        },
        {
            "name": "ModelState",
            "id": "class-ModelState-7a3c994f2ce7112d8895450a61b138224689e68d1cfbfdf5fa178d1569230988e8ac2722a3ac4f0fedb43a980ca2026f1819d7f1006bf278e6fc6a3b843539eb",
            "file": "src/app/core/models/state.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { BehaviorSubject, Observable } from 'rxjs';\r\nimport { State } from '../enum/state.enum';\r\nimport { IModelState } from '@fynnc.models';\r\n\r\n/**\r\n * Generic class to manage the state of a model.\r\n * Allows tracking modifications, controlling states, and notifying changes through observables.\r\n *\r\n * @template T Type of the model represented by the class.\r\n */\r\nexport class ModelState<T extends Record<string, any>> implements IModelState<T> {\r\n  /** Original data of the model. */\r\n  private _data: T;\r\n\r\n  /** Proxy that intercepts modifications to the data. */\r\n  private _proxy: T;\r\n\r\n  /** Current state of the model (ORIGINAL, NEW, MODIFIED, DELETED). */\r\n  private _state: State;\r\n\r\n  /** Observable that notifies state changes. */\r\n  private _stateSubject: BehaviorSubject<State>;\r\n\r\n  /** Set that stores modified attributes. */\r\n  private _modifiedAttributes: Set<keyof T>;\r\n\r\n  /**\r\n   * Creates an instance of ModelState.\r\n   * @param {T} data - Initial data of the model.\r\n   * @param {State} [state=State.NEW] - Initial state of the model.\r\n   */\r\n  constructor(data: T, state: State = State.NEW) {\r\n    this._data = { ...data };\r\n    this._state = state;\r\n    this._stateSubject = new BehaviorSubject<State>(this._state);\r\n    this._modifiedAttributes = new Set<keyof T>();\r\n\r\n    this._proxy = this._createProxy(this._data);\r\n  }\r\n\r\n  /**\r\n   * Creates a Proxy to intercept changes to the model's data.\r\n   * @param {T} obj - Original model object.\r\n   * @returns {T} Proxy of the model object.\r\n   * @private\r\n   */\r\n  private _createProxy(obj: T): T {\r\n    return new Proxy(obj, {\r\n      set: (target, property, value) => {\r\n        if (typeof property === 'string' && property in target) {\r\n          const key = property as keyof T;\r\n          if (typeof value === 'object' && value !== null && !(value instanceof Date)) {\r\n            value = this._createProxy(value); \r\n          }\r\n          if (target[key] !== value) {\r\n            this._modifiedAttributes.add(key);\r\n            target[key] = value;\r\n            if (this._state === State.ORIGINAL) {\r\n              this.markAsModified();\r\n            }\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Gets the model's data through the Proxy.\r\n   * @returns {T} Model data.\r\n   */\r\n  get data(): T {\r\n    return this._proxy;\r\n  }\r\n\r\n  /**\r\n   * Returns an Observable that notifies changes in the model's state.\r\n   * @returns {Observable<State>} Observable of the state.\r\n   */\r\n  get state$(): Observable<State> {\r\n    return this._stateSubject.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Returns the current state of the model.\r\n   * @returns {State} Current model state.\r\n   */\r\n  get state(): State {\r\n    return this._state;\r\n  }\r\n\r\n  /**\r\n   * Changes the current state of the model and notifies observers.\r\n   * @param {State} newState - New state to be set.\r\n   * @private\r\n   */\r\n  private setState(newState: State): void {\r\n    this._state = newState;\r\n    this._stateSubject.next(newState);\r\n  }\r\n\r\n  /**\r\n   * Marks the model as NEW.\r\n   */\r\n  markAsNew(): void {\r\n    this.setState(State.NEW);\r\n  }\r\n\r\n  /**\r\n   * Marks the model as MODIFIED, if applicable.\r\n   */\r\n  markAsModified(): void {\r\n    if (this._state !== State.NEW && this._state !== State.DELETED) {\r\n      this.setState(State.MODIFIED);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Marks the model as DELETED, if allowed.\r\n   * @throws {Error} Throws an error if the model is in the NEW state.\r\n   */\r\n  markAsDeleted(): void {\r\n    if (this._state === State.NEW) {\r\n      throw new Error('New items cannot be marked as deleted.');\r\n    }\r\n    this.setState(State.DELETED);\r\n  }\r\n\r\n  /**\r\n   * Restores the model to the ORIGINAL state.\r\n   * Clears the modified attributes.\r\n   */\r\n  restore(): void {\r\n    if (this._state === State.DELETED) {\r\n      this.setState(State.ORIGINAL);\r\n    }\r\n    this._modifiedAttributes.clear();\r\n  }\r\n\r\n  /**\r\n   * Gets a list of modified attributes in the model.\r\n   * @returns {(keyof T)[]} List of modified attributes.\r\n   */\r\n  getModifiedAttributes(): (keyof T)[] {\r\n    return Array.from(this._modifiedAttributes);\r\n  }\r\n\r\n  /**\r\n   * Clears all attributes marked as modified.\r\n   */\r\n  clearModifiedAttributes(): void {\r\n    this._modifiedAttributes.clear();\r\n  }\r\n\r\n  /**\r\n   * Checks if the current state is NEW.\r\n   * @returns {boolean} True if the state is NEW.\r\n   */\r\n  isNew(): boolean {\r\n    return this._state === State.NEW;\r\n  }\r\n\r\n  /**\r\n   * Checks if the current state is MODIFIED.\r\n   * @returns {boolean} True if the state is MODIFIED.\r\n   */\r\n  isModified(): boolean {\r\n    return this._state === State.MODIFIED;\r\n  }\r\n\r\n  /**\r\n   * Checks if the current state is DELETED.\r\n   * @returns {boolean} True if the state is DELETED.\r\n   */\r\n  isDeleted(): boolean {\r\n    return this._state === State.DELETED;\r\n  }\r\n\r\n  /**\r\n   * Checks if the current state is ORIGINAL.\r\n   * @returns {boolean} True if the state is ORIGINAL.\r\n   */\r\n  isOriginal(): boolean {\r\n    return this._state === State.ORIGINAL;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "<p>Creates an instance of ModelState.</p>\n",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "T",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "state",
                        "type": "State",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "State.NEW"
                    }
                ],
                "line": 25,
                "rawdescription": "\n\nCreates an instance of ModelState.\n",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 958,
                            "end": 962,
                            "kind": 80,
                            "id": 0,
                            "flags": 16842752,
                            "transformFlags": 0,
                            "escapedText": "data"
                        },
                        "type": "T",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 948,
                            "end": 953,
                            "kind": 80,
                            "id": 0,
                            "flags": 16842752,
                            "transformFlags": 0,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>Initial data of the model.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 954,
                            "end": 957,
                            "kind": 309,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "type": {
                                "pos": 955,
                                "end": 956,
                                "kind": 183,
                                "id": 0,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "typeName": {
                                    "pos": 955,
                                    "end": 956,
                                    "kind": 80,
                                    "id": 0,
                                    "flags": 16777216,
                                    "transformFlags": 0,
                                    "escapedText": "T"
                                }
                            }
                        }
                    },
                    {
                        "name": {
                            "pos": 1014,
                            "end": 1019,
                            "kind": 80,
                            "id": 0,
                            "flags": 16842752,
                            "transformFlags": 0,
                            "escapedText": "state"
                        },
                        "type": "State",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "State.NEW",
                        "tagName": {
                            "pos": 999,
                            "end": 1004,
                            "kind": 80,
                            "id": 0,
                            "flags": 16842752,
                            "transformFlags": 0,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>Initial state of the model.</li>\n</ul>\n",
                        "typeExpression": {
                            "pos": 1005,
                            "end": 1012,
                            "kind": 309,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "type": {
                                "pos": 1006,
                                "end": 1011,
                                "kind": 183,
                                "id": 0,
                                "flags": 16777216,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "typeName": {
                                    "pos": 1006,
                                    "end": 1011,
                                    "kind": 80,
                                    "id": 0,
                                    "flags": 16777216,
                                    "transformFlags": 0,
                                    "escapedText": "State"
                                }
                            }
                        }
                    }
                ]
            },
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Original data of the model.</p>\n",
                    "line": 13,
                    "rawdescription": "\nOriginal data of the model.",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_modifiedAttributes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Set<T>",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Set that stores modified attributes.</p>\n",
                    "line": 25,
                    "rawdescription": "\nSet that stores modified attributes.",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_proxy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Proxy that intercepts modifications to the data.</p>\n",
                    "line": 16,
                    "rawdescription": "\nProxy that intercepts modifications to the data.",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "State",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Current state of the model (ORIGINAL, NEW, MODIFIED, DELETED).</p>\n",
                    "line": 19,
                    "rawdescription": "\nCurrent state of the model (ORIGINAL, NEW, MODIFIED, DELETED).",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_stateSubject",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<State>",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Observable that notifies state changes.</p>\n",
                    "line": 22,
                    "rawdescription": "\nObservable that notifies state changes.",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "description": "<p>Generic class to manage the state of a model.\nAllows tracking modifications, controlling states, and notifying changes through observables.</p>\n",
            "rawdescription": "\n\nGeneric class to manage the state of a model.\nAllows tracking modifications, controlling states, and notifying changes through observables.\n\n",
            "methods": [
                {
                    "name": "_createProxy",
                    "args": [
                        {
                            "name": "obj",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreates a Proxy to intercept changes to the model's data.\n",
                    "description": "<p>Creates a Proxy to intercept changes to the model&#39;s data.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1443,
                                "end": 1446,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "obj"
                            },
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1433,
                                "end": 1438,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Original model object.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 1439,
                                "end": 1442,
                                "kind": 309,
                                "id": 0,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "type": {
                                    "pos": 1440,
                                    "end": 1441,
                                    "kind": 183,
                                    "id": 0,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "typeName": {
                                        "pos": 1440,
                                        "end": 1441,
                                        "kind": 80,
                                        "id": 0,
                                        "flags": 16777216,
                                        "transformFlags": 0,
                                        "escapedText": "T"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 1479,
                                "end": 1486,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Proxy of the model object.</p>\n",
                            "returnType": ""
                        },
                        {
                            "tagName": {
                                "pos": 1525,
                                "end": 1532,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "private"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "clearModifiedAttributes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nClears all attributes marked as modified.\n",
                    "description": "<p>Clears all attributes marked as modified.</p>\n"
                },
                {
                    "name": "getModifiedAttributes",
                    "args": [],
                    "optional": false,
                    "returnType": "[]",
                    "typeParameters": [],
                    "line": 144,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGets a list of modified attributes in the model.\n",
                    "description": "<p>Gets a list of modified attributes in the model.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 3975,
                                "end": 3982,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>List of modified attributes.</p>\n",
                            "returnType": "[]"
                        }
                    ]
                },
                {
                    "name": "isDeleted",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 175,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if the current state is DELETED.\n",
                    "description": "<p>Checks if the current state is DELETED.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4707,
                                "end": 4714,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the state is DELETED.</p>\n",
                            "returnType": "boolean"
                        }
                    ]
                },
                {
                    "name": "isModified",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if the current state is MODIFIED.\n",
                    "description": "<p>Checks if the current state is MODIFIED.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4513,
                                "end": 4520,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the state is MODIFIED.</p>\n",
                            "returnType": "boolean"
                        }
                    ]
                },
                {
                    "name": "isNew",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if the current state is NEW.\n",
                    "description": "<p>Checks if the current state is NEW.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4333,
                                "end": 4340,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the state is NEW.</p>\n",
                            "returnType": "boolean"
                        }
                    ]
                },
                {
                    "name": "isOriginal",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 183,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if the current state is ORIGINAL.\n",
                    "description": "<p>Checks if the current state is ORIGINAL.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4899,
                                "end": 4906,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the state is ORIGINAL.</p>\n",
                            "returnType": "boolean"
                        }
                    ]
                },
                {
                    "name": "markAsDeleted",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMarks the model as DELETED, if allowed.\n",
                    "description": "<p>Marks the model as DELETED, if allowed.</p>\n",
                    "jsdoctags": []
                },
                {
                    "name": "markAsModified",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMarks the model as MODIFIED, if applicable.\n",
                    "description": "<p>Marks the model as MODIFIED, if applicable.</p>\n"
                },
                {
                    "name": "markAsNew",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMarks the model as NEW.\n",
                    "description": "<p>Marks the model as NEW.</p>\n"
                },
                {
                    "name": "restore",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRestores the model to the ORIGINAL state.\nClears the modified attributes.\n",
                    "description": "<p>Restores the model to the ORIGINAL state.\nClears the modified attributes.</p>\n"
                },
                {
                    "name": "setState",
                    "args": [
                        {
                            "name": "newState",
                            "type": "State",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChanges the current state of the model and notifies observers.\n",
                    "description": "<p>Changes the current state of the model and notifies observers.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2845,
                                "end": 2853,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "newState"
                            },
                            "type": "State",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2831,
                                "end": 2836,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>New state to be set.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 2837,
                                "end": 2844,
                                "kind": 309,
                                "id": 0,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "type": {
                                    "pos": 2838,
                                    "end": 2843,
                                    "kind": 183,
                                    "id": 0,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "typeName": {
                                        "pos": 2838,
                                        "end": 2843,
                                        "kind": 80,
                                        "id": 0,
                                        "flags": 16777216,
                                        "transformFlags": 0,
                                        "escapedText": "State"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 2884,
                                "end": 2891,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "private"
                            },
                            "comment": ""
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "accessors": {
                "data": {
                    "name": "data",
                    "getSignature": {
                        "name": "data",
                        "type": "",
                        "returnType": "T",
                        "line": 72,
                        "rawdescription": "\n\nGets the model's data through the Proxy.\n",
                        "description": "<p>Gets the model&#39;s data through the Proxy.</p>\n",
                        "jsdoctags": [
                            {
                                "pos": 2268,
                                "end": 2297,
                                "kind": 342,
                                "id": 0,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "tagName": {
                                    "pos": 2269,
                                    "end": 2276,
                                    "kind": 80,
                                    "id": 0,
                                    "flags": 16842752,
                                    "transformFlags": 0,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>Model data.</p>\n",
                                "typeExpression": {
                                    "pos": 2277,
                                    "end": 2280,
                                    "kind": 309,
                                    "id": 0,
                                    "flags": 16842752,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "type": {
                                        "pos": 2278,
                                        "end": 2279,
                                        "kind": 183,
                                        "id": 0,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 1,
                                        "typeName": {
                                            "pos": 2278,
                                            "end": 2279,
                                            "kind": 80,
                                            "id": 0,
                                            "flags": 16777216,
                                            "transformFlags": 0,
                                            "escapedText": "T"
                                        }
                                    }
                                }
                            }
                        ]
                    }
                },
                "state$": {
                    "name": "state$",
                    "getSignature": {
                        "name": "state$",
                        "type": "",
                        "returnType": "Observable<State>",
                        "line": 80,
                        "rawdescription": "\n\nReturns an Observable that notifies changes in the model's state.\n",
                        "description": "<p>Returns an Observable that notifies changes in the model&#39;s state.</p>\n",
                        "jsdoctags": [
                            {
                                "pos": 2436,
                                "end": 2494,
                                "kind": 342,
                                "id": 0,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "tagName": {
                                    "pos": 2437,
                                    "end": 2444,
                                    "kind": 80,
                                    "id": 0,
                                    "flags": 16842752,
                                    "transformFlags": 0,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>Observable of the state.</p>\n",
                                "typeExpression": {
                                    "pos": 2445,
                                    "end": 2464,
                                    "kind": 309,
                                    "id": 0,
                                    "flags": 16842752,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "type": {
                                        "pos": 2446,
                                        "end": 2463,
                                        "kind": 183,
                                        "id": 0,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 1,
                                        "typeName": {
                                            "pos": 2446,
                                            "end": 2456,
                                            "kind": 80,
                                            "id": 0,
                                            "flags": 16777216,
                                            "transformFlags": 0,
                                            "escapedText": "Observable"
                                        },
                                        "typeArguments": [
                                            {
                                                "pos": 2457,
                                                "end": 2462,
                                                "kind": 183,
                                                "id": 0,
                                                "flags": 16777216,
                                                "modifierFlagsCache": 0,
                                                "transformFlags": 1,
                                                "typeName": {
                                                    "pos": 2457,
                                                    "end": 2462,
                                                    "kind": 80,
                                                    "id": 0,
                                                    "flags": 16777216,
                                                    "transformFlags": 0,
                                                    "escapedText": "State"
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                },
                "state": {
                    "name": "state",
                    "getSignature": {
                        "name": "state",
                        "type": "",
                        "returnType": "State",
                        "line": 88,
                        "rawdescription": "\n\nReturns the current state of the model.\n",
                        "description": "<p>Returns the current state of the model.</p>\n",
                        "jsdoctags": [
                            {
                                "pos": 2647,
                                "end": 2689,
                                "kind": 342,
                                "id": 0,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "tagName": {
                                    "pos": 2648,
                                    "end": 2655,
                                    "kind": 80,
                                    "id": 0,
                                    "flags": 16842752,
                                    "transformFlags": 0,
                                    "escapedText": "returns"
                                },
                                "comment": "<p>Current model state.</p>\n",
                                "typeExpression": {
                                    "pos": 2656,
                                    "end": 2663,
                                    "kind": 309,
                                    "id": 0,
                                    "flags": 16842752,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "type": {
                                        "pos": 2657,
                                        "end": 2662,
                                        "kind": 183,
                                        "id": 0,
                                        "flags": 16777216,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 1,
                                        "typeName": {
                                            "pos": 2657,
                                            "end": 2662,
                                            "kind": 80,
                                            "id": 0,
                                            "flags": 16777216,
                                            "transformFlags": 0,
                                            "escapedText": "State"
                                        }
                                    }
                                }
                            }
                        ]
                    }
                }
            },
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "IModelState"
            ]
        },
        {
            "name": "PaymentStatus",
            "id": "class-PaymentStatus-f3faf247efb799da6194fd86cd221afd1d23546ad4eaa74d6c584551536520690b4f3b3a896f2a7161755ebb773a054ea6e71a27386a591ace66f00fff7aac1a",
            "file": "src/app/core/models/payment-status.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { IBill } from \"./i-bill.model\";\r\nimport { IPaymentStatus } from \"./i-payment-status.model\";\r\nimport { ModelState } from \"./state.model\";\r\n\r\n\r\nexport class PaymentStatus extends ModelState<IPaymentStatus> implements IPaymentStatus {   \r\n  private _paidBills?: IBill[];\r\n  private _unpaidBills?: IBill[];\r\n\r\n\r\n  constructor(paymentStatus: IPaymentStatus = {} as IPaymentStatus) {\r\n    super(paymentStatus);\r\n    this._paidBills = paymentStatus.paidBills;\r\n    this._unpaidBills = paymentStatus.unpaidBills;\r\n  }\r\n  get paidBills(): IBill[] | undefined {\r\n    return this._paidBills;\r\n  }\r\n\r\n  set paidBills(value: IBill[] | undefined) {\r\n    this._paidBills = value;\r\n  }\r\n\r\n  get unpaidBills(): IBill[] | undefined {\r\n    return this._unpaidBills;\r\n  }\r\n\r\n  set unpaidBills(value: IBill[] | undefined) {\r\n    this._unpaidBills = value;\r\n  }\r\n\r\n  toJSON(): Partial<IPaymentStatus> {\r\n    return {\r\n      paidBills: this.paidBills,\r\n      unpaidBills: this.unpaidBills,\r\n    };\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "paymentStatus",
                        "type": "IPaymentStatus",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "{} as IPaymentStatus"
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "paymentStatus",
                        "type": "IPaymentStatus",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "{} as IPaymentStatus",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "_paidBills",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IBill[]",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_unpaidBills",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IBill[]",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Original data of the model.</p>\n",
                    "line": 13,
                    "rawdescription": "\nOriginal data of the model.",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "_modifiedAttributes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Set<T>",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Set that stores modified attributes.</p>\n",
                    "line": 25,
                    "rawdescription": "\nSet that stores modified attributes.",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "_proxy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Proxy that intercepts modifications to the data.</p>\n",
                    "line": 16,
                    "rawdescription": "\nProxy that intercepts modifications to the data.",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "_state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "State",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Current state of the model (ORIGINAL, NEW, MODIFIED, DELETED).</p>\n",
                    "line": 19,
                    "rawdescription": "\nCurrent state of the model (ORIGINAL, NEW, MODIFIED, DELETED).",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "_stateSubject",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<State>",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Observable that notifies state changes.</p>\n",
                    "line": 22,
                    "rawdescription": "\nObservable that notifies state changes.",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                }
            ],
            "methods": [
                {
                    "name": "toJSON",
                    "args": [],
                    "optional": false,
                    "returnType": "Partial<IPaymentStatus>",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "_createProxy",
                    "args": [
                        {
                            "name": "obj",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreates a Proxy to intercept changes to the model's data.\n",
                    "description": "<p>Creates a Proxy to intercept changes to the model&#39;s data.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1443,
                                "end": 1446,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "obj"
                            },
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1433,
                                "end": 1438,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Original model object.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 1439,
                                "end": 1442,
                                "kind": 309,
                                "id": 0,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "type": {
                                    "pos": 1440,
                                    "end": 1441,
                                    "kind": 183,
                                    "id": 0,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "typeName": {
                                        "pos": 1440,
                                        "end": 1441,
                                        "kind": 80,
                                        "id": 0,
                                        "flags": 16777216,
                                        "transformFlags": 0,
                                        "escapedText": "T"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 1479,
                                "end": 1486,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Proxy of the model object.</p>\n",
                            "returnType": ""
                        },
                        {
                            "tagName": {
                                "pos": 1525,
                                "end": 1532,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "private"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "clearModifiedAttributes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nClears all attributes marked as modified.\n",
                    "description": "<p>Clears all attributes marked as modified.</p>\n",
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "getModifiedAttributes",
                    "args": [],
                    "optional": false,
                    "returnType": "[]",
                    "typeParameters": [],
                    "line": 144,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGets a list of modified attributes in the model.\n",
                    "description": "<p>Gets a list of modified attributes in the model.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 3975,
                                "end": 3982,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>List of modified attributes.</p>\n",
                            "returnType": "[]"
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "isDeleted",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 175,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if the current state is DELETED.\n",
                    "description": "<p>Checks if the current state is DELETED.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4707,
                                "end": 4714,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the state is DELETED.</p>\n",
                            "returnType": "boolean"
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "isModified",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if the current state is MODIFIED.\n",
                    "description": "<p>Checks if the current state is MODIFIED.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4513,
                                "end": 4520,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the state is MODIFIED.</p>\n",
                            "returnType": "boolean"
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "isNew",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if the current state is NEW.\n",
                    "description": "<p>Checks if the current state is NEW.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4333,
                                "end": 4340,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the state is NEW.</p>\n",
                            "returnType": "boolean"
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "isOriginal",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 183,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if the current state is ORIGINAL.\n",
                    "description": "<p>Checks if the current state is ORIGINAL.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4899,
                                "end": 4906,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the state is ORIGINAL.</p>\n",
                            "returnType": "boolean"
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "markAsDeleted",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMarks the model as DELETED, if allowed.\n",
                    "description": "<p>Marks the model as DELETED, if allowed.</p>\n",
                    "jsdoctags": [],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "markAsModified",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMarks the model as MODIFIED, if applicable.\n",
                    "description": "<p>Marks the model as MODIFIED, if applicable.</p>\n",
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "markAsNew",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMarks the model as NEW.\n",
                    "description": "<p>Marks the model as NEW.</p>\n",
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "restore",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRestores the model to the ORIGINAL state.\nClears the modified attributes.\n",
                    "description": "<p>Restores the model to the ORIGINAL state.\nClears the modified attributes.</p>\n",
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "setState",
                    "args": [
                        {
                            "name": "newState",
                            "type": "State",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChanges the current state of the model and notifies observers.\n",
                    "description": "<p>Changes the current state of the model and notifies observers.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2845,
                                "end": 2853,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "newState"
                            },
                            "type": "State",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2831,
                                "end": 2836,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>New state to be set.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 2837,
                                "end": 2844,
                                "kind": 309,
                                "id": 0,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "type": {
                                    "pos": 2838,
                                    "end": 2843,
                                    "kind": 183,
                                    "id": 0,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "typeName": {
                                        "pos": 2838,
                                        "end": 2843,
                                        "kind": 80,
                                        "id": 0,
                                        "flags": 16777216,
                                        "transformFlags": 0,
                                        "escapedText": "State"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 2884,
                                "end": 2891,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "private"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": [
                "ModelState"
            ],
            "accessors": {
                "paidBills": {
                    "name": "paidBills",
                    "setSignature": {
                        "name": "paidBills",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "IBill[] | undefined",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 20,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "IBill[] | undefined",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "paidBills",
                        "type": "",
                        "returnType": "[] | undefined",
                        "line": 16
                    }
                },
                "unpaidBills": {
                    "name": "unpaidBills",
                    "setSignature": {
                        "name": "unpaidBills",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "IBill[] | undefined",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 28,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "IBill[] | undefined",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "unpaidBills",
                        "type": "",
                        "returnType": "[] | undefined",
                        "line": 24
                    }
                }
            },
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "IPaymentStatus"
            ]
        },
        {
            "name": "User",
            "id": "class-User-14e1fb3caa875ece0e7739481feed1b04e83eadf27a6df53e9a3ae9da2203d4cb3bd3f1b603209a2e9345fdb967ad3c889fc83050eae3b01645b33640c9331b3",
            "file": "src/app/core/models/user.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ModelState, IUser, IFinancialData } from '@fynnc.models';\r\nimport { PaymentStatus } from './payment-status.model';\r\nimport { IPaymentStatus } from './i-payment-status.model';\r\n\r\nexport class User extends ModelState<IUser> implements IUser {\r\n  private _id?: number;\r\n  private _name?: string;\r\n  private _fullName?: string;\r\n  private _email?: string;\r\n  private _phone?: string;\r\n  private _birthDate?: Date;\r\n  private _gender?: 'male' | 'female' | 'other' | 'not informed';\r\n  private _nationality?: string;\r\n  private _maritalStatus?: 'single' | 'married' | 'divorced' | 'widowed' | 'other';\r\n  private _profession?: string;\r\n  private _academicBackground?: string;\r\n  private _username?: string;\r\n  private _password?: string;\r\n  private _financial?: IFinancialData[];\r\n  private _paymentStatus?: IPaymentStatus[];\r\n\r\n  constructor(user: IUser = {} as IUser) {\r\n    super(user);\r\n    this._id = user.id;\r\n    this._name = user.name;\r\n    this._fullName = user.fullName;\r\n    this._email = user.email;\r\n    this._phone = user.phone;\r\n    this._birthDate = user.birthDate;\r\n    this._gender = user.gender;\r\n    this._nationality = user.nationality;\r\n    this._maritalStatus = user.maritalStatus;\r\n    this._profession = user.profession;\r\n    this._academicBackground = user.academicBackground;\r\n    this._username = user.username;\r\n    this._password = user.password;\r\n    this._financial = user.financial;\r\n    this._paymentStatus = user.paymentStatus;\r\n  }\r\n\r\n  get id(): number | undefined {\r\n    return this._id;\r\n  }\r\n  set id(value: number) {\r\n    this._id = value;\r\n  }\r\n\r\n  get name(): string | undefined {\r\n    return this._name;\r\n  }\r\n  set name(value: string) {\r\n    this._name = value;\r\n  }\r\n\r\n  get fullName(): string | undefined {\r\n    return this._fullName;\r\n  }\r\n  set fullName(value: string) {\r\n    this._fullName = value;\r\n  }\r\n\r\n  get email(): string | undefined  {\r\n    return this._email;\r\n  }\r\n  set email(value: string) {\r\n    this._email = value;\r\n  }\r\n\r\n  get phone(): string | undefined {\r\n    return this._phone;\r\n  }\r\n  set phone(value: string) {\r\n    this._phone = value;\r\n  }\r\n\r\n  get birthDate(): Date | undefined {\r\n    return this._birthDate;\r\n  }\r\n  set birthDate(value: Date) {\r\n    this._birthDate = value;\r\n  }\r\n\r\n  get gender(): 'male' | 'female' | 'other' | 'not informed' | undefined {\r\n    return this._gender;\r\n  }\r\n  set gender(value: 'male' | 'female' | 'other' | 'not informed') {\r\n    this._gender = value;\r\n  }\r\n\r\n  get nationality(): string | undefined {\r\n    return this._nationality;\r\n  }\r\n  set nationality(value: string) {\r\n    this._nationality = value;\r\n  }\r\n\r\n  get maritalStatus(): 'single' | 'married' | 'divorced' | 'widowed' | 'other' | undefined {\r\n    return this._maritalStatus;\r\n  }\r\n  set maritalStatus(\r\n    value: 'single' | 'married' | 'divorced' | 'widowed' | 'other'\r\n  ) {\r\n    this._maritalStatus = value;\r\n  }\r\n\r\n  get profession(): string | undefined {\r\n    return this._profession;\r\n  }\r\n  set profession(value: string | undefined) {\r\n    this._profession = value;\r\n  }\r\n\r\n  get academicBackground(): string | undefined {\r\n    return this._academicBackground;\r\n  }\r\n  set academicBackground(value: string | undefined) {\r\n    this._academicBackground = value;\r\n  }\r\n\r\n  get username(): string | undefined {\r\n    return this._username;\r\n  }\r\n  set username(value: string | undefined) {\r\n    this._username = value;\r\n  }\r\n\r\n  get password(): string | undefined {\r\n    return this._password;\r\n  }\r\n  set password(value: string | undefined) {\r\n    this._password = value;\r\n  }\r\n  get financial(): IFinancialData[] | undefined {\r\n    return this._financial;\r\n  }\r\n  set financial(value: IFinancialData[] | undefined) {\r\n    this._financial = value;\r\n  }\r\n  get paymentStatus(): IPaymentStatus[] | undefined {\r\n    return this._paymentStatus;\r\n  }\r\n  set paymentStatus(value: IPaymentStatus[] | undefined) {\r\n    this._paymentStatus = value;\r\n  }\r\n  \r\n  toJSON(): Partial<IUser> {\r\n    return {\r\n      id: this.id,\r\n      name: this.name,\r\n      fullName: this.fullName,\r\n      email: this.email,\r\n      phone: this.phone,\r\n      birthDate: this.birthDate,\r\n      gender: this.gender,\r\n      paymentStatus: this.paymentStatus,\r\n      nationality: this.nationality,\r\n      financial: this.financial,\r\n      maritalStatus: this.maritalStatus,\r\n      ...(this.profession !== undefined && { profession: this.profession }),\r\n      ...(this.academicBackground !== undefined && { academicBackground: this.academicBackground }),\r\n      ...(this.username !== undefined && { username: this.username }),\r\n      ...(this.password !== undefined && { password: this.password }),\r\n    };\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "user",
                        "type": "IUser",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "{} as IUser"
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "user",
                        "type": "IUser",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "{} as IUser",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "_academicBackground",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_birthDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_financial",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IFinancialData[]",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_fullName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_gender",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"male\" | \"female\" | \"other\" | \"not informed\"",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_maritalStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"single\" | \"married\" | \"divorced\" | \"widowed\" | \"other\"",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_nationality",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_paymentStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IPaymentStatus[]",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_phone",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_profession",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Original data of the model.</p>\n",
                    "line": 13,
                    "rawdescription": "\nOriginal data of the model.",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "_modifiedAttributes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Set<T>",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Set that stores modified attributes.</p>\n",
                    "line": 25,
                    "rawdescription": "\nSet that stores modified attributes.",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "_proxy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Proxy that intercepts modifications to the data.</p>\n",
                    "line": 16,
                    "rawdescription": "\nProxy that intercepts modifications to the data.",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "_state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "State",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Current state of the model (ORIGINAL, NEW, MODIFIED, DELETED).</p>\n",
                    "line": 19,
                    "rawdescription": "\nCurrent state of the model (ORIGINAL, NEW, MODIFIED, DELETED).",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "_stateSubject",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<State>",
                    "indexKey": "",
                    "optional": false,
                    "description": "<p>Observable that notifies state changes.</p>\n",
                    "line": 22,
                    "rawdescription": "\nObservable that notifies state changes.",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                }
            ],
            "methods": [
                {
                    "name": "toJSON",
                    "args": [],
                    "optional": false,
                    "returnType": "Partial<IUser>",
                    "typeParameters": [],
                    "line": 146,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "_createProxy",
                    "args": [
                        {
                            "name": "obj",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreates a Proxy to intercept changes to the model's data.\n",
                    "description": "<p>Creates a Proxy to intercept changes to the model&#39;s data.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1443,
                                "end": 1446,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "obj"
                            },
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1433,
                                "end": 1438,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Original model object.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 1439,
                                "end": 1442,
                                "kind": 309,
                                "id": 0,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "type": {
                                    "pos": 1440,
                                    "end": 1441,
                                    "kind": 183,
                                    "id": 0,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "typeName": {
                                        "pos": 1440,
                                        "end": 1441,
                                        "kind": 80,
                                        "id": 0,
                                        "flags": 16777216,
                                        "transformFlags": 0,
                                        "escapedText": "T"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 1479,
                                "end": 1486,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Proxy of the model object.</p>\n",
                            "returnType": ""
                        },
                        {
                            "tagName": {
                                "pos": 1525,
                                "end": 1532,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "private"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "clearModifiedAttributes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nClears all attributes marked as modified.\n",
                    "description": "<p>Clears all attributes marked as modified.</p>\n",
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "getModifiedAttributes",
                    "args": [],
                    "optional": false,
                    "returnType": "[]",
                    "typeParameters": [],
                    "line": 144,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGets a list of modified attributes in the model.\n",
                    "description": "<p>Gets a list of modified attributes in the model.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 3975,
                                "end": 3982,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>List of modified attributes.</p>\n",
                            "returnType": "[]"
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "isDeleted",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 175,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if the current state is DELETED.\n",
                    "description": "<p>Checks if the current state is DELETED.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4707,
                                "end": 4714,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the state is DELETED.</p>\n",
                            "returnType": "boolean"
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "isModified",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if the current state is MODIFIED.\n",
                    "description": "<p>Checks if the current state is MODIFIED.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4513,
                                "end": 4520,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the state is MODIFIED.</p>\n",
                            "returnType": "boolean"
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "isNew",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if the current state is NEW.\n",
                    "description": "<p>Checks if the current state is NEW.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4333,
                                "end": 4340,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the state is NEW.</p>\n",
                            "returnType": "boolean"
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "isOriginal",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 183,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks if the current state is ORIGINAL.\n",
                    "description": "<p>Checks if the current state is ORIGINAL.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 4899,
                                "end": 4906,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "returns"
                            },
                            "comment": "<p>True if the state is ORIGINAL.</p>\n",
                            "returnType": "boolean"
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "markAsDeleted",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMarks the model as DELETED, if allowed.\n",
                    "description": "<p>Marks the model as DELETED, if allowed.</p>\n",
                    "jsdoctags": [],
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "markAsModified",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMarks the model as MODIFIED, if applicable.\n",
                    "description": "<p>Marks the model as MODIFIED, if applicable.</p>\n",
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "markAsNew",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMarks the model as NEW.\n",
                    "description": "<p>Marks the model as NEW.</p>\n",
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "restore",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRestores the model to the ORIGINAL state.\nClears the modified attributes.\n",
                    "description": "<p>Restores the model to the ORIGINAL state.\nClears the modified attributes.</p>\n",
                    "inheritance": {
                        "file": "ModelState"
                    }
                },
                {
                    "name": "setState",
                    "args": [
                        {
                            "name": "newState",
                            "type": "State",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChanges the current state of the model and notifies observers.\n",
                    "description": "<p>Changes the current state of the model and notifies observers.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2845,
                                "end": 2853,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "newState"
                            },
                            "type": "State",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2831,
                                "end": 2836,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>New state to be set.</li>\n</ul>\n",
                            "typeExpression": {
                                "pos": 2837,
                                "end": 2844,
                                "kind": 309,
                                "id": 0,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "type": {
                                    "pos": 2838,
                                    "end": 2843,
                                    "kind": 183,
                                    "id": 0,
                                    "flags": 16777216,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "typeName": {
                                        "pos": 2838,
                                        "end": 2843,
                                        "kind": 80,
                                        "id": 0,
                                        "flags": 16777216,
                                        "transformFlags": 0,
                                        "escapedText": "State"
                                    }
                                }
                            }
                        },
                        {
                            "tagName": {
                                "pos": 2884,
                                "end": 2891,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "private"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "ModelState"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": [
                "ModelState"
            ],
            "accessors": {
                "id": {
                    "name": "id",
                    "setSignature": {
                        "name": "id",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 44,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "number",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "id",
                        "type": "",
                        "returnType": "number | undefined",
                        "line": 41
                    }
                },
                "name": {
                    "name": "name",
                    "setSignature": {
                        "name": "name",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 51,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "name",
                        "type": "",
                        "returnType": "string | undefined",
                        "line": 48
                    }
                },
                "fullName": {
                    "name": "fullName",
                    "setSignature": {
                        "name": "fullName",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 58,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "fullName",
                        "type": "",
                        "returnType": "string | undefined",
                        "line": 55
                    }
                },
                "email": {
                    "name": "email",
                    "setSignature": {
                        "name": "email",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 65,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "email",
                        "type": "",
                        "returnType": "string | undefined",
                        "line": 62
                    }
                },
                "phone": {
                    "name": "phone",
                    "setSignature": {
                        "name": "phone",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 72,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "phone",
                        "type": "",
                        "returnType": "string | undefined",
                        "line": 69
                    }
                },
                "birthDate": {
                    "name": "birthDate",
                    "setSignature": {
                        "name": "birthDate",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "Date",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 79,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "Date",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "birthDate",
                        "type": "",
                        "returnType": "Date | undefined",
                        "line": 76
                    }
                },
                "gender": {
                    "name": "gender",
                    "setSignature": {
                        "name": "gender",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "\"male\" | \"female\" | \"other\" | \"not informed\"",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 86,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "\"male\" | \"female\" | \"other\" | \"not informed\"",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "gender",
                        "type": "",
                        "returnType": "\"male\" | \"female\" | \"other\" | \"not informed\" | undefined",
                        "line": 83
                    }
                },
                "nationality": {
                    "name": "nationality",
                    "setSignature": {
                        "name": "nationality",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 93,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "nationality",
                        "type": "",
                        "returnType": "string | undefined",
                        "line": 90
                    }
                },
                "maritalStatus": {
                    "name": "maritalStatus",
                    "setSignature": {
                        "name": "maritalStatus",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "\"single\" | \"married\" | \"divorced\" | \"widowed\" | \"other\"",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 100,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "\"single\" | \"married\" | \"divorced\" | \"widowed\" | \"other\"",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "maritalStatus",
                        "type": "",
                        "returnType": "\"single\" | \"married\" | \"divorced\" | \"widowed\" | \"other\" | undefined",
                        "line": 97
                    }
                },
                "profession": {
                    "name": "profession",
                    "setSignature": {
                        "name": "profession",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 109,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "profession",
                        "type": "",
                        "returnType": "string | undefined",
                        "line": 106
                    }
                },
                "academicBackground": {
                    "name": "academicBackground",
                    "setSignature": {
                        "name": "academicBackground",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 116,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "academicBackground",
                        "type": "",
                        "returnType": "string | undefined",
                        "line": 113
                    }
                },
                "username": {
                    "name": "username",
                    "setSignature": {
                        "name": "username",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 123,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "username",
                        "type": "",
                        "returnType": "string | undefined",
                        "line": 120
                    }
                },
                "password": {
                    "name": "password",
                    "setSignature": {
                        "name": "password",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 130,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "password",
                        "type": "",
                        "returnType": "string | undefined",
                        "line": 127
                    }
                },
                "financial": {
                    "name": "financial",
                    "setSignature": {
                        "name": "financial",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "IFinancialData[] | undefined",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 136,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "IFinancialData[] | undefined",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "financial",
                        "type": "",
                        "returnType": "[] | undefined",
                        "line": 133
                    }
                },
                "paymentStatus": {
                    "name": "paymentStatus",
                    "setSignature": {
                        "name": "paymentStatus",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "IPaymentStatus[] | undefined",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 142,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "IPaymentStatus[] | undefined",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "paymentStatus",
                        "type": "",
                        "returnType": "[] | undefined",
                        "line": 139
                    }
                }
            },
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "IUser"
            ]
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-77e1baac6297472ba69ee451bbcba2f77e3923fa28dddbdfa35891ba6f726f23d9003087034a04f91b52f4e5d14fc18f3a50390e28335a08afe81b17c27f543c",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "exibirNavbar",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "navbarFechada",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "title",
                    "defaultValue": "'FYNNC'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleNavbar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "NavBarComponent",
                    "type": "component"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectorRef, Component } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { NavBarComponent } from './core/components/nav-bar/nav-bar/nav-bar.component';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport { filter } from 'rxjs';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  imports: [RouterOutlet, NavBarComponent, CommonModule],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.scss',\r\n  animations: [\r\n    trigger('toggleNav', [\r\n      state('open', style({\r\n        width: '220px',\r\n      })),\r\n      state('closed', style({\r\n        width: '90px',\r\n      })),\r\n      transition('open <=> closed', [\r\n        animate('300ms ease-in-out')\r\n      ]),\r\n    ])\r\n  ]\r\n})\r\nexport class AppComponent {\r\n  title = 'FYNNC';\r\n  \r\n  exibirNavbar: boolean = false;\r\n  navbarFechada: boolean = false;\r\n  constructor(\r\n    private router: Router,\r\n    private cdr: ChangeDetectorRef\r\n  ) { }\r\n  toggleNavbar() {\r\n    this.navbarFechada = !this.navbarFechada;\r\n  }\r\n  ngOnInit(): void {\r\n    this.router.events\r\n      .pipe(filter(event => event instanceof NavigationEnd))\r\n      .subscribe((event: NavigationEnd) => {\r\n        this.exibirNavbar = event.url === '/login' ? this.exibirNavbar = false \r\n        : this.exibirNavbar = true;\r\n        this.exibirNavbar\r\n        this.cdr.detectChanges();\r\n      });\r\n  }\r\n}\r\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "\r\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n<link href=\"https://fonts.googleapis.com/css2?family=Cormorant+Garamond:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&family=EB+Garamond:ital,wght@0,400..800;1,400..800&display=swap\" rel=\"stylesheet\">\r\n<div class=\"app-container\">\r\n  <ng-container *ngIf=\"exibirNavbar\">    \r\n    <app-nav-bar \r\n      [@toggleNav]=\"navbarFechada ? 'closed' : 'open'\" \r\n      (toggle)=\"toggleNavbar()\"\r\n      [situationNavBar]=\"navbarFechada\">\r\n    </app-nav-bar>\r\n  </ng-container>\r\n  <div class=\"main-content\" [class.expanded]=\"navbarFechada\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CadastroDespesaComponent",
            "id": "component-CadastroDespesaComponent-fb4ff0f1c7d8fe1a74d83aa3370b0cc4fdae89f3ac8647c98542cab22db3d0a3a46ee42e82a25001990307f15b191ed4bf0cbbdfb495b6b5b002533461298a32",
            "file": "src/app/cadastro-despesa/cadastro-despesa.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-cadastro-despesa",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./cadastro-despesa.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 85
                },
                {
                    "name": "fakeBillData",
                    "defaultValue": "new Bill({\r\n    id: 1,\r\n    description: \"Pagamento de serviço de consultoria\",\r\n    amount: 350.75,\r\n    dueDate: \"2024-08-15\",\r\n    status: \"Pendente\"\r\n  } as IBill)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Bill",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "fakeFinancialData",
                    "defaultValue": "new FinancialData({\r\n    balance: 1500.75,\r\n    budget: 2000,\r\n    expenses: 500.25,\r\n    income: 2500,\r\n    savings: 1000,\r\n    debt: 300,\r\n    investment: 700,\r\n    currency: 'USD',\r\n    lastUpdated: new Date('2024-08-12T10:30:00Z')\r\n  } as IFinancialData)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FinancialData",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "fakePaymentStatusData",
                    "defaultValue": "new PaymentStatus()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PaymentStatus",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "itemsPerMove",
                    "defaultValue": "3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "selectedDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IUser | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "userData",
                    "defaultValue": "new User({\r\n    id: 1,\r\n    name: 'John',\r\n    fullName: 'John Doe',\r\n    email: 'johndoe@example.com',\r\n    phone: '+1 555-1234',\r\n    birthDate: new Date('1990-05-15'),\r\n    gender: 'male',\r\n    nationality: 'American',\r\n    maritalStatus: 'single',\r\n    profession: 'Software Engineer',\r\n    academicBackground: 'Bachelor in Computer Science',\r\n    username: 'johndoe',\r\n    password: 'password123',\r\n  } as IUser)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "methodsClass": [
                {
                    "name": "moveCarousel",
                    "args": [
                        {
                            "name": "direction",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "direction",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDateChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "ChartComponentComponent",
                    "type": "component"
                },
                {
                    "name": "ExpenseCardComponent",
                    "type": "component"
                },
                {
                    "name": "TableComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FinancialData, IFinancialData, IUser, User } from '@fynnc.models';\r\nimport { ChartComponentComponent } from 'app/core/components/dashboard/chart-component/chart-component.component';\r\nimport { ExpenseCardComponent } from 'app/core/components/dashboard/expense-card/expense-card.component';\r\nimport { TableComponent } from 'app/core/components/entity-creation/table/table.component';\r\nimport { Bill } from 'app/core/models/bill.mode';\r\nimport { IBill } from 'app/core/models/i-bill.model';\r\nimport { PaymentStatus } from 'app/core/models/payment-status.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-cadastro-despesa',\r\n  imports: [ChartComponentComponent, ExpenseCardComponent, TableComponent],\r\n  templateUrl: './cadastro-despesa.component.html',\r\n  styleUrl: './cadastro-despesa.component.scss'\r\n})\r\nexport class CadastroDespesaComponent {\r\n  constructor() {\r\n    // Inicia a data selecionada, caso necessário\r\n    this.selectedDate = new Date();\r\n  }\r\n  user: IUser | undefined;\r\n  fakeFinancialData: FinancialData = new FinancialData({\r\n    balance: 1500.75,\r\n    budget: 2000,\r\n    expenses: 500.25,\r\n    income: 2500,\r\n    savings: 1000,\r\n    debt: 300,\r\n    investment: 700,\r\n    currency: 'USD',\r\n    lastUpdated: new Date('2024-08-12T10:30:00Z')\r\n  } as IFinancialData);\r\n\r\n  fakeBillData: Bill = new Bill({\r\n    id: 1,\r\n    description: \"Pagamento de serviço de consultoria\",\r\n    amount: 350.75,\r\n    dueDate: \"2024-08-15\",\r\n    status: \"Pendente\"\r\n  } as IBill);\r\n  \r\n\r\n  fakePaymentStatusData: PaymentStatus = new PaymentStatus();\r\n  userData: User = new User({\r\n    id: 1,\r\n    name: 'John',\r\n    fullName: 'John Doe',\r\n    email: 'johndoe@example.com',\r\n    phone: '+1 555-1234',\r\n    birthDate: new Date('1990-05-15'),\r\n    gender: 'male',\r\n    nationality: 'American',\r\n    maritalStatus: 'single',\r\n    profession: 'Software Engineer',\r\n    academicBackground: 'Bachelor in Computer Science',\r\n    username: 'johndoe',\r\n    password: 'password123',\r\n  } as IUser);\r\n  selectedDate: Date | undefined;\r\n  onDateChange(event: any) {\r\n    this.selectedDate = event.value;\r\n    console.log('Data selecionada:', this.selectedDate);\r\n  }\r\n  ngOnInit(): void {\r\n    if (!this.fakePaymentStatusData.paidBills) {\r\n      this.fakePaymentStatusData.paidBills = [];\r\n    }\r\n    if (!this.fakePaymentStatusData.unpaidBills) {\r\n      this.fakePaymentStatusData.unpaidBills = [];\r\n    }\r\n    if (!this.userData.paymentStatus) {\r\n      this.userData.paymentStatus = [];\r\n    }\r\n    if (!this.userData.financial) {\r\n      this.userData.financial = [];\r\n    }\r\n\r\n    this.fakePaymentStatusData.paidBills.push(this.fakeBillData);\r\n    this.fakePaymentStatusData.unpaidBills.push(this.fakeBillData);\r\n    this.userData.paymentStatus.push(this.fakePaymentStatusData);\r\n    this.userData.financial.push(this.fakeFinancialData);\r\n    console.log(this.userData)\r\n  }\r\n  currentIndex = 0;\r\n  itemsPerMove = 3; // Move 3 itens por vez\r\n\r\n  moveCarousel(direction: number) {\r\n    const totalItems = 6; // Número total de itens\r\n    const newIndex = this.currentIndex + direction * this.itemsPerMove;\r\n\r\n    if (newIndex >= 0 && newIndex <= totalItems - this.itemsPerMove) {\r\n      this.currentIndex = newIndex;\r\n    }\r\n\r\n    const carousel = document.querySelector('.carousel') as HTMLElement;\r\n    carousel.style.transform = `translateX(-${this.currentIndex * 33.33}%)`;\r\n  }\r\n}\r\n",
            "styleUrl": "./cadastro-despesa.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "extends": [],
            "templateData": "<div class=\"main-container\">\r\n    <div> \r\n        <div class=\"ghapic\">\r\n            <app-chart-component [User]=\"userData\" [Type]=\"'line'\"></app-chart-component>\r\n        </div>\r\n    </div>\r\n    <app-table class=\"table\"></app-table>\r\n</div>"
        },
        {
            "name": "ChartComponentComponent",
            "id": "component-ChartComponentComponent-2c6b83020107cc8a5e72bf4eb056cd1557a7704b1c3ca7429d24621d3df0ab2cd45344cb22282cffdf00f3924c0c60364091da5ae648436c08708618cf039f51",
            "file": "src/app/core/components/dashboard/chart-component/chart-component.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chart-component",
            "styleUrls": [
                "./chart-component.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./chart-component.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "Month",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "Date",
                    "decorators": []
                },
                {
                    "name": "paymentStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "PaymentStatus",
                    "decorators": []
                },
                {
                    "name": "Type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "\"bar\" | \"radar\" | \"pie\" | \"line\" | \"doughnut\"",
                    "decorators": []
                },
                {
                    "name": "User",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "IUser",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Chart",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "chartType",
                    "defaultValue": "'bar'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"bar\" | \"radar\" | \"pie\" | \"line\" | \"doughnut\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "Months",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                }
            ],
            "methodsClass": [
                {
                    "name": "createCommonData",
                    "args": [
                        {
                            "name": "labels",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "data",
                            "type": "number[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "object",
                    "typeParameters": [],
                    "line": 269,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "labels",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "number[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generateNext12Months",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 288,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getChartConfig",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handlePaidClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 262,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleUnpaidClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 266,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, AfterViewInit, Input } from '@angular/core';\r\nimport { IUser } from '@fynnc.models';\r\nimport { PaymentStatus } from 'app/core/models/payment-status.model';\r\nimport { \r\n  Chart,\r\n  LinearScale, \r\n  BarElement, \r\n  CategoryScale, \r\n  Title, \r\n  Tooltip, \r\n  Legend, \r\n  BarController, \r\n  BubbleController, \r\n  RadarController, \r\n  DoughnutController,\r\n  ScatterController,\r\n  PointElement, \r\n  LineElement, \r\n  LineController, \r\n  ArcElement, \r\n  RadialLinearScale, \r\n  PieController\r\n} from 'chart.js';\r\n\r\n@Component({\r\n  selector: 'app-chart-component',\r\n  templateUrl: './chart-component.component.html',\r\n  styleUrls: ['./chart-component.component.scss']\r\n})\r\nexport class ChartComponentComponent implements AfterViewInit {\r\n  chart!: Chart;\r\n  @Input() User?: IUser;\r\n  @Input() Type?: 'bar' | 'radar' | 'pie' | 'line' | 'doughnut';\r\n  @Input() Month?: Date;\r\n  @Input() paymentStatus?: PaymentStatus;\r\n  Months: string[] = [];\r\n  chartType: 'bar' | 'radar' | 'pie' | 'line' | 'doughnut' = 'bar'; \r\n\r\n  ngOnInit() {\r\n    this.Month = this.Month ?? new Date();\r\n    this.generateNext12Months();\r\n  }\r\n  \r\n  ngAfterViewInit() {\r\n    console.log(this.User)\r\n    if (this.Type && ['bar', 'radar', 'pie', 'line', 'doughnut'].includes(this.Type)) {\r\n      this.chartType = this.Type;\r\n    }\r\n\r\n    if (this.chart) {\r\n      this.chart.destroy();\r\n    }\r\n\r\n    Chart.register(\r\n      LinearScale, \r\n      BarElement, \r\n      ScatterController,\r\n      CategoryScale, \r\n      Title, \r\n      Tooltip, \r\n      Legend, \r\n      BarController, \r\n      BubbleController, \r\n      RadarController, \r\n      PointElement, \r\n      LineElement, \r\n      PieController,\r\n      LineController, \r\n      DoughnutController,\r\n      ArcElement, \r\n      RadialLinearScale\r\n    );\r\n\r\n    const chartConfig = this.getChartConfig();\r\n    this.chart = new Chart('meuGrafico', chartConfig);\r\n  }\r\n\r\n  getChartConfig(): any { \r\n    this.Month?.getMonth();\r\n    const months = this.Months;\r\n    let data: number[] = [];\r\n  \r\n    this.User?.financial?.forEach((element) => {\r\n      if (element.debt) {\r\n        data.push(element.debt);\r\n      } else {\r\n        data.push(0);\r\n      }\r\n    });\r\n  \r\n    let commonData: any;\r\n  \r\n    if (this.User) {\r\n      commonData = this.createCommonData(months, data, 'Gastos Mensais');\r\n    } \r\n    else if (this.paymentStatus) {\r\n      let paidBills: number = 0;\r\n      let unpaidBills: number = 0;\r\n      \r\n      this.paymentStatus.paidBills?.forEach((element) => {\r\n        if (element.amount) {\r\n          paidBills += element.amount;\r\n        }\r\n      });\r\n  \r\n      this.paymentStatus.unpaidBills?.forEach((element) => {\r\n        if (element.amount) {\r\n          unpaidBills += element.amount;\r\n        }\r\n      });\r\n  \r\n      commonData = this.createCommonData(['Pago', 'Não Pago'], [paidBills, unpaidBills], 'Controle Financeiro');\r\n      commonData.datasets[0].onClick = (event: any, elements: any[]) => {\r\n        if (elements.length > 0) {\r\n          const clickedIndex = elements[0].index;\r\n          if (clickedIndex === 0) {\r\n            this.handlePaidClick();\r\n          } else if (clickedIndex === 1) {\r\n            this.handleUnpaidClick();\r\n          }\r\n        }\r\n      };\r\n    }\r\n  \r\n    const commonOptions = {\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          display: true,\r\n          position: 'top',\r\n          labels: {\r\n            font: {\r\n              size: 14,\r\n              weight: 'bold'\r\n            },\r\n            color: '#000000'\r\n          }\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: this.User ? 'Gastos Mensais' : 'Controle Financeiro',\r\n          font: {\r\n            size: 18,\r\n            weight: 'bold'\r\n          },\r\n          color: '#000000'\r\n        },\r\n        tooltip: {\r\n          callbacks: {\r\n            label: (context: any) => {\r\n              return `R$ ${context.raw.toLocaleString('pt-BR')}`;\r\n            }\r\n          },\r\n          backgroundColor: '#19202b',\r\n          titleColor: '#A0C1D1',\r\n          bodyColor: '#D4EAF7'\r\n        }\r\n      },\r\n      animation: {\r\n        duration: 1000,\r\n        easing: 'easeInOutQuad'\r\n      },\r\n      onClick: (event: any, elements: any[]) => {\r\n        if (commonData.datasets[0].onClick) {\r\n          commonData.datasets[0].onClick(event, elements);\r\n        }\r\n      }\r\n    };\r\n  \r\n    switch (this.chartType) {\r\n      case 'bar':\r\n        return {\r\n          type: 'bar',\r\n          data: commonData,\r\n          options: {\r\n            ...commonOptions,\r\n            scales: {\r\n              x: {\r\n                grid: {\r\n                  display: false\r\n                },\r\n                ticks: {\r\n                  color: '#000000'\r\n                }\r\n              },\r\n              y: {\r\n                beginAtZero: true,\r\n                grid: {\r\n                  color: 'rgba(255, 255, 255, 0.1)'\r\n                },\r\n                ticks: {\r\n                  color: '#000000',\r\n                  callback: (value: number) => `R$ ${value.toLocaleString('pt-BR')}`\r\n                }\r\n              }\r\n            }\r\n          }\r\n        };\r\n  \r\n      case 'radar':\r\n        return {\r\n          type: 'radar',\r\n          data: commonData,\r\n          options: {\r\n            ...commonOptions,\r\n            scales: {\r\n              r: {\r\n                beginAtZero: true,\r\n                angleLines: {\r\n                  display: true,\r\n                  color: '#000000'\r\n                },\r\n                ticks: {\r\n                  color: '#000000'\r\n                }\r\n              }\r\n            }\r\n          }\r\n        };\r\n  \r\n      case 'pie':\r\n      case 'doughnut':\r\n        return {\r\n          type: this.chartType,\r\n          data: commonData,\r\n          options: {\r\n            ...commonOptions,\r\n            plugins: {\r\n              legend: {\r\n                position: 'right'\r\n              }\r\n            }\r\n          }\r\n        };\r\n  \r\n      case 'line':\r\n        return {\r\n          type: 'line',\r\n          data: commonData,\r\n          options: {\r\n            ...commonOptions,\r\n            scales: {\r\n              x: {\r\n                ticks: {\r\n                  color: '#000000'\r\n                }\r\n              },\r\n              y: {\r\n                beginAtZero: true,\r\n                ticks: {\r\n                  color: '#000000'\r\n                }\r\n              }\r\n            }\r\n          }\r\n        };\r\n  \r\n      default:\r\n        throw new Error('Tipo de gráfico não suportado!');\r\n    }\r\n  }\r\n  handlePaidClick() {\r\n    console.log('Pago foi clicado!');\r\n  }\r\n  \r\n  handleUnpaidClick() {\r\n    console.log('Não Pago foi clicado!');\r\n  }\r\n  createCommonData(labels: string[], data: number[], label: string): object {\r\n    return {\r\n      labels: labels,\r\n      datasets: [{\r\n        label: label,\r\n        //back que vai ter que me retornar sempre o valor do mes atual\r\n        data: [160, 149, 260, 275, 115, 121, 187, 161, 216, 257, 252, 136],\r\n        backgroundColor: ['#FFFFFF', '#EB5C81', '#D86894', '#A76FAC', '#9276B4', '#6D7FBE', '#181F37'],\r\n        borderColor: '#000000b4',\r\n        borderWidth: 1.5,\r\n        borderRadius: 5,\r\n        hoverBackgroundColor: '#F0E68C',\r\n        hoverBorderWidth: 2,\r\n        barPercentage: 0.8,\r\n        categoryPercentage: 0.9\r\n      }]\r\n    };\r\n  }\r\n  \r\n  generateNext12Months() {\r\n    this.Months = Array.from({ length: 12 }, (_, i) => {\r\n      const nextMonth = new Date(this.Month as Date);\r\n      if(this.Month)\r\n      nextMonth.setMonth(this.Month.getMonth() + i);      \r\n      return nextMonth.toLocaleString('pt-BR', { month: 'long' });\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".grafico-container {\r\n    //background-color: #ffffffe3;\r\n    border-radius: 8px;\r\n    padding: 15px;\r\n    height: 70vh;\r\n    width: 97%;\r\n}\r\n",
                    "styleUrl": "./chart-component.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div class=\"grafico-container\">\r\n    <canvas id=\"meuGrafico\"></canvas>\r\n  </div>\r\n  "
        },
        {
            "name": "CodePasswordComponent",
            "id": "component-CodePasswordComponent-d2e4630bae97a6e91248a2ba77d8594e240d2ba84fddee2d322841e266b2e286b2e15f2548c83beafdc170b3f22ec3fc7179687a417525cad18bf6dc70e27f83",
            "file": "src/app/core/components/auth/code-password/code-password.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-code-password",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./code-password.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "codeForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "digits",
                    "defaultValue": "Array(6).fill(0)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "inputs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ElementRef>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "decorators": [
                        {
                            "name": "ViewChildren",
                            "stringifiedArguments": "'inputRef'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "isCodeValid",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "moveFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmitCode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component, ElementRef, QueryList, ViewChildren } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\n@Component({\r\n  selector: 'app-code-password',\r\n  imports: [\r\n            CommonModule,\r\n            MatFormFieldModule,\r\n            MatInputModule,\r\n            MatButtonModule,\r\n            MatIconModule,\r\n            ReactiveFormsModule\r\n  ],\r\n  templateUrl: './code-password.component.html',\r\n  styleUrl: './code-password.component.scss'\r\n})\r\nexport class CodePasswordComponent {\r\n  codeForm!: FormGroup;\r\n  digits = Array(6).fill(0); \r\n  isCodeValid: boolean = false;\r\n\r\n  @ViewChildren('inputRef') inputs!: QueryList<ElementRef>;\r\n\r\n  constructor(private fb: FormBuilder, private http: HttpClient) {}\r\n\r\n  ngOnInit() {\r\n    this.codeForm = this.fb.group({});\r\n    this.digits.forEach((_, i) => {\r\n      this.codeForm.addControl(`digit${i}`, new FormControl('', [Validators.required, Validators.pattern('[0-9]')]));\r\n    });\r\n  }\r\n\r\n  moveFocus(event: any, index: number) {\r\n    const input = event.target;\r\n    if (input.value.length === 1 && index < 5) {\r\n      this.inputs.toArray()[index + 1].nativeElement.focus();\r\n    } else if (event.key === 'Backspace' && index > 0) {\r\n      this.inputs.toArray()[index - 1].nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  onSubmitCode() {\r\n    if (this.codeForm.valid) {\r\n      const code = this.digits.map((_, i) => this.codeForm.get(`digit${i}`)?.value).join('');\r\n\r\n      this.http.post('/api/validate-reset-code', { code }).subscribe({\r\n        next: () => {\r\n          this.isCodeValid = true;\r\n          console.log('Código validado com sucesso!');\r\n        },\r\n        error: (err) => {\r\n          console.error('Erro ao validar código:', err);\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n",
            "styleUrl": "./code-password.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<form [formGroup]=\"codeForm\" (ngSubmit)=\"onSubmitCode()\">\r\n\r\n    <div class=\"code-instruction\">\r\n      <p>Por favor, insira o código que você recebeu por e-mail.</p>\r\n    </div>\r\n  \r\n    <div class=\"code-input-container\">\r\n      <input \r\n        *ngFor=\"let digit of digits; let i = index\"\r\n        #inputRef\r\n        matInput\r\n        maxlength=\"1\"\r\n        class=\"code-input\"\r\n        type=\"text\"\r\n        [formControlName]=\"'digit' + i\"\r\n        (input)=\"moveFocus($event, i)\"\r\n      />\r\n    </div>\r\n  \r\n\r\n    <mat-error *ngIf=\"codeForm.invalid && codeForm.touched\" style=\"text-align: center; display: flex; justify-content: center; align-items: center;\">\r\n      Certifique-se de preencher corretamente os 6 dígitos.\r\n    </mat-error>\r\n\r\n    <div *ngIf=\"isCodeValid\" class=\"success-message\">\r\n      ✅ Código validado com sucesso!\r\n    </div>\r\n  </form>\r\n  "
        },
        {
            "name": "ExpenseCardComponent",
            "id": "component-ExpenseCardComponent-b00fe196911ef9bd16562d9d5cb0180dd2f91c7ded30f17f7f26a3e8a063cb1ecf61db0a7f1079122a0de0f46c1a5780a1332e8197f0374277d4d8e750fb39dd",
            "file": "src/app/core/components/dashboard/expense-card/expense-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-expense-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./expense-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "barHeights",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "gerarValoresAleatorios",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatMenuModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\n\r\n@Component({\r\n  selector: 'app-expense-card',\r\n  imports: [CommonModule, MatIconModule,MatMenuModule],\r\n  templateUrl: './expense-card.component.html',\r\n  styleUrl: './expense-card.component.scss'\r\n})\r\nexport class ExpenseCardComponent {\r\n  barHeights: number[] = [];\r\n\r\n  constructor() {\r\n    this.gerarValoresAleatorios();\r\n  }\r\n\r\n  gerarValoresAleatorios() {\r\n    this.barHeights = Array.from({ length: 7 }, () => Math.floor(Math.random() * 71) + 30);\r\n  }\r\n\r\n\r\n}\r\n",
            "styleUrl": "./expense-card.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "extends": [],
            "templateData": "<div class=\"expense-card\">\r\n    <div class=\"category\">\r\n      <mat-icon>attach_money</mat-icon> Comida\r\n    </div>\r\n    <div class=\"expense-body\">\r\n      <div class=\"chart\">\r\n        <div class=\"bar\" *ngFor=\"let value of barHeights\" [ngStyle]=\"{'height': value + '%'}\"></div>\r\n      </div>\r\n      <div class=\"amount\">$150</div>\r\n    </div>\r\n  </div>\r\n  "
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-959484ac7fd202307d3560ee38891787c39621a24dbd2a60fc0d07af687b4194bf79411363eee26f25461be90f9deb0d858cfc13d446351f2fcb83d86fa0d7e4",
            "file": "src/app/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fakeBillData",
                    "defaultValue": "new Bill({\r\n    id: 1,\r\n    description: \"Pagamento de serviço de consultoria\",\r\n    amount: 350.75,\r\n    dueDate: \"2024-08-15\",\r\n    status: \"Pendente\"\r\n  } as IBill)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Bill",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "fakeFinancialData",
                    "defaultValue": "new FinancialData({\r\n    balance: 1500.75,\r\n    budget: 2000,\r\n    expenses: 500.25,\r\n    income: 2500,\r\n    savings: 1000,\r\n    debt: 300,\r\n    investment: 700,\r\n    currency: 'USD',\r\n    lastUpdated: new Date('2024-08-12T10:30:00Z')\r\n  } as IFinancialData)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FinancialData",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "fakePaymentStatusData",
                    "defaultValue": "new PaymentStatus()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PaymentStatus",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "selectedDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IUser | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "userData",
                    "defaultValue": "new User({\r\n    id: 1,\r\n    name: 'John',\r\n    fullName: 'John Doe',\r\n    email: 'johndoe@example.com',\r\n    phone: '+1 555-1234',\r\n    birthDate: new Date('1990-05-15'),\r\n    gender: 'male',\r\n    nationality: 'American',\r\n    maritalStatus: 'single',\r\n    profession: 'Software Engineer',\r\n    academicBackground: 'Bachelor in Computer Science',\r\n    username: 'johndoe',\r\n    password: 'password123',\r\n  } as IUser)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDateChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "MatDatepickerModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatNativeDateModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FinancialData, IFinancialData, IUser, User } from '@fynnc.models';\r\nimport { ChartComponentComponent } from 'app/core/components/dashboard/chart-component/chart-component.component';\r\nimport { Bill } from 'app/core/models/bill.mode';\r\nimport { IBill } from 'app/core/models/i-bill.model';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { PaymentStatus } from 'app/core/models/payment-status.model';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  imports: [\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatNativeDateModule\r\n  ],\r\n  templateUrl: './home.component.html',\r\n  styleUrl: './home.component.scss'\r\n})\r\n\r\nexport class HomeComponent {\r\n  constructor() {\r\n    // Inicia a data selecionada, caso necessário\r\n    this.selectedDate = new Date();\r\n  }\r\n  user: IUser | undefined;\r\n  fakeFinancialData: FinancialData = new FinancialData({\r\n    balance: 1500.75,\r\n    budget: 2000,\r\n    expenses: 500.25,\r\n    income: 2500,\r\n    savings: 1000,\r\n    debt: 300,\r\n    investment: 700,\r\n    currency: 'USD',\r\n    lastUpdated: new Date('2024-08-12T10:30:00Z')\r\n  } as IFinancialData);\r\n\r\n  fakeBillData: Bill = new Bill({\r\n    id: 1,\r\n    description: \"Pagamento de serviço de consultoria\",\r\n    amount: 350.75,\r\n    dueDate: \"2024-08-15\",\r\n    status: \"Pendente\"\r\n  } as IBill);\r\n  \r\n\r\n  fakePaymentStatusData: PaymentStatus = new PaymentStatus();\r\n  userData: User = new User({\r\n    id: 1,\r\n    name: 'John',\r\n    fullName: 'John Doe',\r\n    email: 'johndoe@example.com',\r\n    phone: '+1 555-1234',\r\n    birthDate: new Date('1990-05-15'),\r\n    gender: 'male',\r\n    nationality: 'American',\r\n    maritalStatus: 'single',\r\n    profession: 'Software Engineer',\r\n    academicBackground: 'Bachelor in Computer Science',\r\n    username: 'johndoe',\r\n    password: 'password123',\r\n  } as IUser);\r\n  selectedDate: Date | undefined;\r\n  onDateChange(event: any) {\r\n    this.selectedDate = event.value;\r\n    console.log('Data selecionada:', this.selectedDate);\r\n  }\r\n  ngOnInit(): void {\r\n    if (!this.fakePaymentStatusData.paidBills) {\r\n      this.fakePaymentStatusData.paidBills = [];\r\n    }\r\n    if (!this.fakePaymentStatusData.unpaidBills) {\r\n      this.fakePaymentStatusData.unpaidBills = [];\r\n    }\r\n    if (!this.userData.paymentStatus) {\r\n      this.userData.paymentStatus = [];\r\n    }\r\n    if (!this.userData.financial) {\r\n      this.userData.financial = [];\r\n    }\r\n\r\n    this.fakePaymentStatusData.paidBills.push(this.fakeBillData);\r\n    this.fakePaymentStatusData.unpaidBills.push(this.fakeBillData);\r\n    this.userData.paymentStatus.push(this.fakePaymentStatusData);\r\n    this.userData.financial.push(this.fakeFinancialData);\r\n    console.log(this.userData)\r\n  }\r\n}\r\n",
            "styleUrl": "./home.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 24
            },
            "extends": [],
            "templateData": "<img src=\"assets/imagens/FYNNCS.png\" alt=\"FYNNCS\" class=\"FYNNCS\" style=\"    height: 100vh;\r\n    width: 100%;\" />\r\n<div class=\"dashBoard\">\r\n  <!-- <app-chart-component [User]=\"userData\"></app-chart-component> -->\r\n  <!-- <mat-form-field appearance=\"outline\" >\r\n        <mat-label>Escolha uma data</mat-label>\r\n        <input matInput [matDatepicker]=\"picker\" placeholder=\"Data\">\r\n        <mat-datepicker #picker></mat-datepicker>\r\n      </mat-form-field> -->\r\n\r\n\r\n</div>"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-ae6122de782a25b9f3bdfae174c1b48bfe41aff268a8a82c766ad975143d90c4a3436cb991b286f86344b780d9bba26a9a1f02193fee62020b0b08f9a353d4ee",
            "file": "src/app/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "singIn",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "singUp",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methodsClass": [
                {
                    "name": "navegate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "singInForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "singUpForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "SignUpFormComponent",
                    "type": "component"
                },
                {
                    "name": "SignInFormComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SignUpFormComponent } from \"../core/components/auth/sign-up-form-component/sign-up-form-component.component\";\r\nimport { SignInFormComponent } from \"../core/components/auth/sign-in-form-component/sign-in-form-component.component\";\r\nimport {  Router } from '@angular/router';\r\nimport { ExpenseCardComponent } from 'app/core/components/dashboard/expense-card/expense-card.component';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n  imports: [\r\n    CommonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    \r\n    MatButtonModule,\r\n    MatIconModule,\r\n    ReactiveFormsModule,\r\n    SignUpFormComponent,\r\n    SignInFormComponent\r\n],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  form!: FormGroup;\r\n  isLoading: boolean = false;\r\n  singUp: boolean = false;\r\n  singIn: boolean = true;\r\n\r\n\r\n  constructor(\r\n    private readonly router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n  navegate(){\r\n    this.router.navigate(['/home']);\r\n  }\r\n  singUpForm(){\r\n    this.singUp = true\r\n    this.singIn = false\r\n  }\r\n  singInForm() {\r\n    this.singUp = false;\r\n    setTimeout(() => {\r\n      this.singIn = true;\r\n    }, 100);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {\r\n  display: flex;\r\n  height: 100vh;\r\n  \r\n  justify-content: left;\r\n}\r\n\r\n.logo {\r\n  flex: 1;\r\n  margin-bottom: -5px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  background-color: #f0f0f0; /* Fundo cinza claro semelhante ao exemplo */\r\n  height: 100vh;\r\n  \r\n}\r\n\r\n\r\n.logo span {\r\n  font-size: 6em;\r\n  background-image: linear-gradient(to right, \r\n  #e43d6a, \r\n  #D86894, \r\n  #A76FAC, \r\n  #9276B4, \r\n  #6D7FBE, \r\n  #181F37\r\n  );\r\n\r\n  -webkit-background-clip: text;\r\n  color: transparent;\r\n  white-space: nowrap;\r\n  border-bottom: 2px solid #D86894;\r\n  line-height: 90px;\r\n  overflow: hidden;\r\n  animation: escrever 2s linear forwards;\r\n\r\n  \r\n}\r\n.logo small {\r\n  font-size: 1em;\r\n  font-weight: normal;\r\n  letter-spacing: 0.2em;\r\n  color: #D86894;\r\n  margin-top: 5px;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n  \r\n  animation: fadeIn 4s ease-in-out forwards;\r\n  opacity: 0;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from {\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n@keyframes escrever {\r\n  0% {\r\n    clip-path: inset(0 100% 0 0);\r\n  }\r\n\r\n  100% {\r\n    clip-path: inset(0 0 0 0);\r\n  }\r\n}\r\n\r\n\r\n.form {\r\n  width: 30%;\r\n  margin-right: -10px;\r\n  background-color: #181F37;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  color: white;\r\n  height: 100vh;\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n\r\n.form.expanded {\r\n  width: 500px;\r\n}\r\n\r\n\r\n.form-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n  max-width: 400px;\r\n  margin: auto;\r\n\r\n  .custom-input {\r\n    width: 100%;\r\n    color: white\r\n  }\r\n\r\n  .custom-name-field {\r\n    font-weight: bold;\r\n    color: white;\r\n  }\r\n}\r\n\r\n.button-container {\r\n  display: flex;\r\n  gap: 10px;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 100%;\r\n}\r\n\r\nbutton {\r\n  margin-top: 0;\r\n  flex: 1;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  align-self: auto;\r\n\r\n  &.btn-primary {\r\n    color: #fff;\r\n    background-color: #4e5c6e;\r\n\r\n    &:hover {\r\n      background-color: #3b495e;\r\n    }\r\n  }\r\n\r\n  &.btn-secondary {\r\n    color: #4e5c6e;\r\n    background-color: #f1f1f1;\r\n\r\n    &:hover {\r\n      background-color: #e2e2e2;\r\n    }\r\n  }\r\n}\r\n\r\n.welcome-text {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  color: white;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n}\r\n.forget-password {\r\n  font-size: small;\r\n  justify-content: end;\r\n  display: flex;\r\n}\r\n\r\n.login {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  color: white;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.google-button {\r\n  color: rgb(0, 0, 0);\r\n  margin: 20px;\r\n  width: 100%;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 20px;\r\n  background-color: #ffffff;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n  transition: background-color 0.3s ease;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.google-button:hover {\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.google-icon {\r\n  width: 20px;\r\n  height: 20px;\r\n  margin-right: 10px;\r\n}\r\n\r\n\r\n",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n<link href=\"https://fonts.googleapis.com/css2?family=Cormorant+Garamond:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&family=EB+Garamond:ital,wght@0,400..800;1,400..800&display=swap\" rel=\"stylesheet\">\r\n<div class=\"container\">\r\n  <div class=\"logo\">\r\n    <span>FYNNCS</span>\r\n    <small>Finance Your Next New Chapters</small>\r\n  </div>\r\n  <div class=\"form\" [ngClass]=\"{'expanded': singUp}\">\r\n    <app-sign-in-form-component *ngIf=\"singIn\"(goBackToLogin)=\"singUpForm()\" (goSuccessful)=\"navegate()\"></app-sign-in-form-component>\r\n    <app-sign-up-form-component *ngIf=\"singUp\" (goBackToLogin)=\"singInForm()\"></app-sign-up-form-component>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "NavBarComponent",
            "id": "component-NavBarComponent-a231332b01703edbf7267d021edeee1205fd1ba269a28dd2cdb0354522966e8dd7e7ebd50466c3429bd275e09748abf17c60b77985221dd13bb3f389b4b9111a",
            "file": "src/app/core/components/nav-bar/nav-bar/nav-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-nav-bar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./nav-bar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "situationNavBar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "toggle",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "sidenavOpened",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleNavbar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatToolbarModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatTooltipModule",
                    "type": "module"
                },
                {
                    "name": "MatListModule",
                    "type": "module"
                },
                {
                    "name": "MatMenuModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatSidenavModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, HostListener, Input, Output, SimpleChanges } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\n\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  imports: [\r\n    RouterModule,\r\n    CommonModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatSidenavModule],\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrl: './nav-bar.component.scss',\r\n  animations: [\r\n    trigger('sidenavAnimation', [\r\n      state('void', style({ transform: 'translateX(-100%)' })),\r\n      state('open', style({ transform: 'translateX(0)' })),\r\n      transition('void <=> open', [\r\n        animate('300ms ease-in-out')\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class NavBarComponent {\r\n  @Output() toggle = new EventEmitter<void>(); \r\n  @Input() situationNavBar!: boolean;\r\n  sidenavOpened = false; \r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['situationNavBar']) {\r\n      this.sidenavOpened = this.situationNavBar;\r\n    }\r\n  } \r\n  toggleNavbar() {\r\n    this.toggle.emit(); \r\n  }\r\n}\r\n",
            "styleUrl": "./nav-bar.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "\r\n<div class=\"example-container\">\r\n  <div class=\"sidenav\" [class.opened]=\"true\">\r\n    <div class=\"navbar\" (click)=\"toggleNavbar()\" [ngStyle]=\"{ 'justify-content': sidenavOpened ? 'center' : 'end' }\">\r\n        <mat-icon matTooltip=\"Menu\" matTooltipShowDelay=\"1000\">\r\n          {{ sidenavOpened ? 'menu' : 'arrow_back' }}\r\n        </mat-icon>\r\n    </div>\r\n    \r\n    <div class=\"nav-list\">\r\n      <a class=\"nav-item\" routerLink=\"/home\">\r\n        <mat-icon \r\n          *ngIf=\"sidenavOpened\"\r\n          matTooltip=\"Início\" \r\n          matTooltipShowDelay=\"1000\">home</mat-icon>\r\n        <span *ngIf=\"!sidenavOpened\"><mat-icon>home</mat-icon>Início</span>\r\n      </a>\r\n      <a class=\"nav-item\" routerLink=\"/cadastro-despesas\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">\r\n        <mat-icon \r\n          *ngIf=\"sidenavOpened\"\r\n          matTooltip=\"Cadastro de Despesas\" \r\n          matTooltipShowDelay=\"1000\">money_off</mat-icon>\r\n        <span *ngIf=\"!sidenavOpened\"><mat-icon>money_off</mat-icon>Cadastro de Despesas</span>\r\n      </a>\r\n      <a class=\"nav-item\" routerLink=\"/cadastro-receitas\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">\r\n        <mat-icon \r\n          *ngIf=\"sidenavOpened\"\r\n          matTooltip=\"Cadastro de Receitas\" \r\n          matTooltipShowDelay=\"1000\">\r\n          attach_money\r\n        </mat-icon>\r\n        <span *ngIf=\"!sidenavOpened\">\r\n          <mat-icon>attach_money</mat-icon>Cadastro de Receitas\r\n        </span>\r\n      </a>\r\n      \r\n      \r\n      <a class=\"nav-item\" routerLink=\"/login\" >\r\n        <mat-icon \r\n          *ngIf=\"sidenavOpened\"\r\n          matTooltip=\"Compartilhamento de Finanças Familiares ou de Parceria\"\r\n          matTooltipShowDelay=\"1000\">group</mat-icon>\r\n        <span *ngIf=\"!sidenavOpened\"><mat-icon>group</mat-icon>Compartilhamento</span>\r\n      </a>\r\n      <a class=\"nav-item\" routerLink=\"/contact\">\r\n        <mat-icon \r\n          *ngIf=\"sidenavOpened\"\r\n          matTooltip=\"Plano Financeiro\"\r\n          matTooltipShowDelay=\"1000\">paid</mat-icon>\r\n        <span *ngIf=\"!sidenavOpened\"><mat-icon>paid</mat-icon>Plano</span>\r\n      </a>\r\n      <a class=\"nav-item\" routerLink=\"/contact\">\r\n        <mat-icon \r\n          *ngIf=\"sidenavOpened\"\r\n          matTooltip=\"Visualização de Relatórios Financeiros\"\r\n          matTooltipShowDelay=\"1000\">assessment</mat-icon>\r\n        <span *ngIf=\"!sidenavOpened\"><mat-icon>assessment</mat-icon>Relatórios</span>\r\n      </a>\r\n      <a class=\"nav-item exit\" routerLink=\"/login\">\r\n        <mat-icon \r\n          matTooltip=\"Sair\">exit_to_app</mat-icon>\r\n      </a>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "NewPasswordComponent",
            "id": "component-NewPasswordComponent-5b66dd9b21fef34aa6cb51d4a5b63bd5b45d8f75e063170172574347ad7065fe0e6fd0196bd148337a4a648ef9ecb876a5fd80792e3713c13452695c86f9a20a",
            "file": "src/app/core/components/auth/new-password/new-password.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-new-password",
            "styleUrls": [
                "./new-password.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./new-password.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorMessage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "hidePassword",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "isPasswordValid",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "passwordForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "checkPasswords",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmitPassword",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "togglePasswordVisibility",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\n@Component({\r\n  selector: 'app-new-password',\r\n  imports: [\r\n    CommonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  templateUrl: './new-password.component.html',\r\n  styleUrls: ['./new-password.component.scss']\r\n})\r\nexport class NewPasswordComponent {\r\n  passwordForm!: FormGroup;\r\n  isPasswordValid = false;\r\n  errorMessage = '';\r\n  hidePassword = true; // Controla a visibilidade da senha\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.passwordForm = this.fb.group({\r\n      newPassword: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(8),\r\n          Validators.pattern(/^(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)\r\n        ]\r\n      ],\r\n      confirmPassword: ['', [Validators.required]]\r\n    });\r\n    this.passwordForm.get('confirmPassword')?.valueChanges.subscribe(() => {\r\n      this.checkPasswords();\r\n    });\r\n  }\r\n\r\n  checkPasswords() {\r\n    const newPassword = this.passwordForm?.get('newPassword')?.value;\r\n    const confirmPassword = this.passwordForm?.get('confirmPassword')?.value;\r\n\r\n    if (newPassword && confirmPassword && newPassword !== confirmPassword) {\r\n      this.passwordForm?.get('confirmPassword')?.setErrors({ mismatch: true });\r\n      this.errorMessage = 'As senhas não coincidem.';\r\n    } else {\r\n      this.passwordForm?.get('confirmPassword')?.setErrors(null);\r\n      this.errorMessage = '';\r\n    }\r\n  }\r\n\r\n  onSubmitPassword() {\r\n    const newPassword = this.passwordForm?.get('newPassword')?.value;\r\n    const confirmPassword = this.passwordForm?.get('confirmPassword')?.value;\r\n\r\n    if (this.passwordForm?.valid && newPassword === confirmPassword) {\r\n      this.isPasswordValid = true;\r\n      this.errorMessage = ''; // Limpa qualquer mensagem de erro anterior\r\n    } else {\r\n      this.errorMessage = 'As senhas não coincidem, por favor verifique e tente novamente.';\r\n    }\r\n  }\r\n\r\n  togglePasswordVisibility() {\r\n    this.hidePassword = !this.hidePassword; // Alterna a visibilidade da senha\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".form {\r\n  width: 390px;\r\n  background-color: #19202b;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  color: white;\r\n  height: 100vh;\r\n  transition: width 0.3s ease;\r\n\r\n  &.expanded {\r\n    width: 500px;\r\n  }\r\n}\r\n\r\n.password-instruction {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  font-size: 1.2em;\r\n  color: #ccc;\r\n}\r\n\r\n.password-input-container {\r\n  margin-bottom: 20px;\r\n\r\n  label {\r\n    display: block;\r\n    color: white;\r\n    font-size: 1em;\r\n    margin-bottom: 8px;\r\n  }\r\n\r\n  input {\r\n    width: 100%;\r\n    padding: 12px 16px;\r\n    border: 1px solid #4e5c6e;\r\n    border-radius: 5px;\r\n    background-color: #2c3641;\r\n    color: white;\r\n    font-size: 1em;\r\n    margin-bottom: 8px;\r\n    outline: none;\r\n    box-sizing: border-box;\r\n\r\n    &::placeholder {\r\n      color: #8a8a8a;\r\n    }\r\n\r\n    &:focus {\r\n      border-color: #6a82fb;\r\n      background-color: #1c232a;\r\n    }\r\n  }\r\n\r\n  mat-error {\r\n    font-size: 0.875em;\r\n    color: #e74c3c;\r\n  }\r\n}\r\n\r\n.success-message {\r\n  background-color: #28a745;\r\n  color: white;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  font-size: 1em;\r\n  margin-bottom: 20px;\r\n}\r\n\r\nbutton {\r\n  padding: 12px 20px;\r\n  border-radius: 5px;\r\n  border: none;\r\n  width: 100%;\r\n  background-color: #4e5c6e;\r\n  color: white;\r\n  font-size: 1.1em;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n\r\n  &:disabled {\r\n    background-color: #7a8b99;\r\n    cursor: not-allowed;\r\n  }\r\n\r\n  &:not(:disabled):hover {\r\n    background-color: #3b495e;\r\n  }\r\n}\r\n\r\n.error-message {\r\n  color: red;\r\n  font-size: 14px;\r\n  margin-top: 10px;\r\n}\r\n.password-wrapper {\r\n  position: relative;\r\n}\r\n\r\nmat-icon {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  cursor: pointer;\r\n}\r\n",
                    "styleUrl": "./new-password.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<form [formGroup]=\"passwordForm\" (ngSubmit)=\"onSubmitPassword()\">\r\n  <div class=\"password-instruction\">\r\n    <p>Por favor, insira sua nova senha.</p>\r\n  </div>\r\n\r\n  <div class=\"password-input-container\">\r\n    <label for=\"newPassword\">Nova Senha</label>\r\n    <input \r\n      id=\"newPassword\"\r\n      type=\"password\"\r\n      formControlName=\"newPassword\"\r\n      matInput\r\n      required\r\n      minlength=\"8\"\r\n      placeholder=\"Digite sua nova senha\"\r\n    />\r\n    <mat-error *ngIf=\"passwordForm.get('newPassword')?.hasError('required') && passwordForm.get('newPassword')?.touched\">\r\n      A senha é obrigatória.\r\n    </mat-error>\r\n    <mat-error *ngIf=\"passwordForm.get('newPassword')?.hasError('minlength') && passwordForm.get('newPassword')?.touched\">\r\n      A senha deve ter no mínimo 8 caracteres.\r\n    </mat-error>\r\n    <mat-error *ngIf=\"passwordForm.get('newPassword')?.hasError('pattern') && passwordForm.get('newPassword')?.touched\">\r\n      A senha deve conter pelo menos uma letra maiúscula, um número e um caractere especial.\r\n    </mat-error>\r\n  </div>\r\n\r\n  <div class=\"password-input-container\">\r\n    <label for=\"confirmPassword\">Confirmar Senha</label>\r\n    <input \r\n      id=\"confirmPassword\"\r\n      type=\"password\"\r\n      formControlName=\"confirmPassword\"\r\n      matInput\r\n      required\r\n      placeholder=\"Confirme sua nova senha\"\r\n    />\r\n    <mat-error *ngIf=\"passwordForm.get('confirmPassword')?.hasError('required') && passwordForm.get('confirmPassword')?.touched\">\r\n      A confirmação da senha é obrigatória.\r\n    </mat-error>\r\n    <mat-error *ngIf=\"passwordForm.get('confirmPassword')?.hasError('mismatch') && passwordForm.get('confirmPassword')?.touched\">\r\n      As senhas não coincidem.\r\n    </mat-error>\r\n  </div>\r\n\r\n  <!-- Exibe mensagem de erro se as senhas não coincidirem -->\r\n  <div *ngIf=\"errorMessage\" class=\"error-message\">\r\n    {{ errorMessage }}\r\n  </div>\r\n\r\n  <div *ngIf=\"isPasswordValid\" class=\"success-message\">\r\n    ✅ Senha alterada com sucesso!\r\n  </div>\r\n\r\n  <button mat-button type=\"submit\" [disabled]=\"passwordForm.invalid\">Alterar Senha</button>\r\n</form>\r\n"
        },
        {
            "name": "ResetPasswordComponent",
            "id": "component-ResetPasswordComponent-fcbc88bdf8b5783644098d6d121a0e07f823d8555b329d49efbe545005eac4a206ce21e634b77f3559fa4eec2ad10346b3f38bacaec03084f53f94b26651dc23",
            "file": "src/app/core/components/auth/reset-password/reset-password.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-reset-password",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./reset-password.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "isCodeSent",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openCodeDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormRecord, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { CodePasswordComponent } from '../code-password/code-password.component';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  imports: [\r\n        CommonModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        ReactiveFormsModule\r\n  ],\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrl: './reset-password.component.scss'\r\n})\r\nexport class ResetPasswordComponent {\r\n  form!: FormGroup\r\n  isCodeSent: boolean = false;\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      emaio: ['',[]]\r\n    })\r\n  }\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private dialog: MatDialog\r\n  ){}\r\n  \r\n  onSubmit(){\r\n    this.dialog.closeAll()\r\n  }\r\n  openCodeDialog() {\r\n    const dialogRef = this.dialog.open(CodePasswordComponent, {\r\n      width: '600px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result?.success) {\r\n        console.log('Código validado com sucesso!');\r\n      } else {\r\n        console.log('Diálogo fechado sem validação.');\r\n      }\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./reset-password.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\"  class=\"form-container\">\r\n      <mat-form-field appearance=\"outline\" class=\"custom-input\">\r\n        <mat-label>Email:</mat-label>\r\n        <input matInput type=\"email\" formControlName=\"email\" placeholder=\"Entre com email registrado\">\r\n      </mat-form-field>\r\n      <div class=\"button-container\">\r\n        <button type=\"submit\" class=\"btn-primary\">Encontrar conta</button>\r\n      </div>\r\n    </form>\r\n    <div *ngIf=\"isCodeSent\" class=\"btn-secondary\">\r\n      Um código foi enviado para o seu e-mail. Verifique sua caixa de entrada!\r\n    </div>\r\n\r\n  "
        },
        {
            "name": "SignInFormComponent",
            "id": "component-SignInFormComponent-eb23a78499b25f70e56988d174c72caf429ccb389691ae3e9a6d5a6801c7c6e151b3e3cc7251786f502b4aec930da1f31c235ca7a9b835756c0ae636ab35ffe9",
            "file": "src/app/core/components/auth/sign-in-form-component/sign-in-form-component.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sign-in-form-component",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sign-in-form-component.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "goBackToLogin",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "EventEmitter"
                },
                {
                    "name": "goSuccessful",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "errorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "maxTentativas",
                    "defaultValue": "3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "mostrarEsqueceuSenha",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 81
                },
                {
                    "name": "recaptchaResponse",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "tentativasFalhas",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "methodsClass": [
                {
                    "name": "changeToSingUp",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openCodeDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openForgotPassword",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "verificarTentativas",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AuthService } from '../service/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { IUser } from '@fynnc.models';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ResetPasswordComponent } from '../reset-password/reset-password.component';\r\nimport { CodePasswordComponent } from '../code-password/code-password.component';\r\n\r\n@Component({\r\n  selector: 'app-sign-in-form-component',\r\n  templateUrl: './sign-in-form-component.component.html',\r\n  styleUrl: './sign-in-form-component.component.scss',\r\n  imports: [\r\n    CommonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    ReactiveFormsModule\r\n  ],\r\n})\r\nexport class SignInFormComponent {\r\n  @Output() goBackToLogin = new EventEmitter<void>();\r\n  @Output() goSuccessful = new EventEmitter<void>();\r\n  form!: FormGroup;\r\n  errorMessage: string | undefined\r\n  tentativasFalhas: number = 0;\r\n  maxTentativas: number = 3;\r\n  isLoading: boolean = false;\r\n  recaptchaResponse: string | undefined\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private readonly authService: AuthService,\r\n    private readonly router: Router,\r\n    private readonly dialog: MatDialog\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      email: ['', ],\r\n      password: ['',],\r\n    });\r\n  }\r\n  changeToSingUp() {\r\n    this.goBackToLogin.emit();\r\n  }\r\n\r\n  openForgotPassword() {\r\n    const dialogRef = this.dialog.open(ResetPasswordComponent, {\r\n      width: '600px',\r\n      maxWidth: '90vw',\r\n      backdropClass: 'custom-backdrop'\r\n    });\r\n    dialogRef.afterClosed().subscribe((sendCode) => {\r\n    //  if (!sendCode) return;\r\n      this.openCodeDialog();\r\n    });\r\n  }\r\n\r\n  openCodeDialog() {\r\n    const dialogRef = this.dialog.open(CodePasswordComponent, {\r\n      width: '600px',\r\n      backdropClass: 'custom-backdrop'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result?.success) {\r\n        console.log('Código validado com sucesso!');\r\n      } else {\r\n        console.log('Diálogo fechado sem validação.');\r\n      }\r\n    });\r\n  }\r\nmostrarEsqueceuSenha: boolean = false;\r\n\r\nverificarTentativas(): void {\r\n  if (this.tentativasFalhas >= this.maxTentativas) {\r\n    setTimeout(() => {\r\n      this.mostrarEsqueceuSenha = true;\r\n    }, 500); // Delay de 500ms\r\n  }\r\n}\r\n\r\n  onSubmit(): void {\r\n\r\n    //Quem deve fazer isso é login n o component\r\n    this.goSuccessful.emit()\r\n  //   if (!this.form.valid) {\r\n  //     this.tentativasFalhas += 1;\r\n  //   }\r\n\r\n  //   const user: IUser = this.form.value;\r\n  //   this.authService.login(user.email, user.password).subscribe({\r\n  //     next: (response) => {\r\n  //       const token = response.token;\r\n  //       this.authService.saveToken(token);\r\n  //       this.tentativasFalhas = 0;\r\n  //     },\r\n  //     error: (error: HttpErrorResponse) => {\r\n  //       this.errorMessage = 'Login falhou. Verifique suas credenciais.';\r\n  //       console.error('Erro no login:', error);\r\n  //       this.tentativasFalhas += 1;\r\n  //     }\r\n  //   });\r\n   }\r\n}\r\n",
            "styleUrl": "./sign-in-form-component.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 37,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "  <div class=\"welcome-text\">\r\n    <img src=\"assets/imagens/F.png\" class=\"f\" alt=\"Logo\" />\r\n  </div>\r\n\r\n<div class=\"login-options\">\r\n  <form [formGroup]=\"form\" class=\"form-container\">\r\n    <mat-form-field appearance=\"outline\" class=\"custom-input\">\r\n      <mat-label>Email:</mat-label>\r\n      <input matInput formControlName=\"email\" placeholder=\"Enter email\" autocomplete=\"off\" class=\"email-input\" />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"outline\" class=\"custom-input\">\r\n      <mat-label>Senha:</mat-label>\r\n      <input matInput formControlName=\"password\" type=\"password\" placeholder=\"Enter password\" class=\"password-input\"/>\r\n    </mat-form-field>\r\n    <span \r\n    *ngIf=\"tentativasFalhas >= maxTentativas\" \r\n    class=\"forgot-password\" \r\n    (click)=\"openForgotPassword()\"\r\n  >\r\n    Esqueceu a senha?\r\n  </span>\r\n  \r\n    <div class=\"button-container\">\r\n      <button type=\"submit\" class=\"btn-secondary\" (click)=\"changeToSingUp()\">Registrar</button>\r\n      <button type=\"submit\" class=\"btn-primary\" (click)=\"onSubmit()\">Entrar</button>\r\n    </div>\r\n    <div class=\"login\">\r\n      <div class=\"or-separator\"><span>ou</span></div> \r\n      <button class=\"google-button\">\r\n        <img src=\"assets/imagens/google.png\" alt=\"Google Icon\" class=\"google-icon\" />\r\n        Entrar com o Google\r\n      </button>\r\n    </div>\r\n  </form>\r\n\r\n  \r\n"
        },
        {
            "name": "SignUpFormComponent",
            "id": "component-SignUpFormComponent-5c5f6be60a2a1ab6196f6fea8700dc81159351fee78fc77ba698fdfabca92e4c50ae89ed422abc5951b73f4186d8bf432f3131ea0870127b22da55ccb9e7b102",
            "file": "src/app/core/components/auth/sign-up-form-component/sign-up-form-component.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sign-up-form-component",
            "styleUrls": [
                "./sign-up-form-component.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sign-up-form-component.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "goBackToLogin",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "hideConfirmPassword",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "hidePassword",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "passwordMatchValidator",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sanitizedOutput",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SafeHtml",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "changeToSingIn",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "sanitizeString",
                    "args": [
                        {
                            "name": "input",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "input",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sanitizeWithDomSanitizer",
                    "args": [
                        {
                            "name": "input",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "SafeHtml",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "input",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, ReactiveFormsModule, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-sign-up-form-component',\r\n  templateUrl: './sign-up-form-component.component.html',\r\n  styleUrls: ['./sign-up-form-component.component.scss'],\r\n  imports: [\r\n    CommonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n})\r\nexport class SignUpFormComponent implements OnInit {\r\n  form!: FormGroup;\r\n  hidePassword = true;\r\n    hideConfirmPassword = true;\r\n  sanitizedOutput: SafeHtml = '';\r\n\r\n  @Output() goBackToLogin = new EventEmitter<void>();\r\n\r\n  private passwordMatchValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\r\n    const password = control.get('password')?.value;\r\n    const confirmPassword = control.get('confirmPassword')?.value;\r\n\r\n    if (password && confirmPassword && password !== confirmPassword) {\r\n      control.get('confirmPassword')?.setErrors({ mismatch: true });\r\n      return { mismatch: true };\r\n    } else {\r\n      control.get('confirmPassword')?.setErrors(null);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  constructor(private fb: FormBuilder, private sanitizer: DomSanitizer) {}\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.nonNullable.group({\r\n      name: ['', [Validators.required, Validators.pattern(/^[a-zA-ZÀ-ÿ\\s]+$/)]],\r\n      fullName: ['', [Validators.required, Validators.pattern(/^[a-zA-ZÀ-ÿ\\s]+$/)]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      phone: ['', [Validators.required, Validators.pattern(/^\\d{10,11}$/)]],\r\n      birthDate: ['', Validators.required],\r\n      gender: ['', Validators.required],\r\n      nationality: ['', Validators.required],\r\n      maritalStatus: ['', Validators.required],\r\n      profession: ['', [Validators.required, Validators.pattern(/^[a-zA-ZÀ-ÿ\\s]+$/)]],\r\n      academicBackground: ['', Validators.required],\r\n      username: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9_]+$/)]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: ['', [Validators.required]],\r\n    }, { validators: this.passwordMatchValidator });\r\n  }\r\n\r\n\r\n  private sanitizeString(input: string): string {\r\n    return input\r\n      .replace(/<script.*?>.*?<\\/script>/gim, '')\r\n      .replace(/<\\/?[^>]+(>|$)/g, '')\r\n      .replace(/javascript:/gi, '')\r\n      .trim();\r\n  }\r\n\r\n  private sanitizeWithDomSanitizer(input: string): SafeHtml {\r\n    return this.sanitizer.bypassSecurityTrustHtml(this.sanitizeString(input));\r\n  }\r\n\r\n\r\n  changeToSingIn() {\r\n    this.goBackToLogin.emit();\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      const sanitizedData = Object.keys(this.form.controls).reduce((acc, key) => {\r\n        acc[key] = this.sanitizeWithDomSanitizer(this.form.get(key)?.value || ''); \r\n        return acc;\r\n      }, {} as Record<string, SafeHtml>); \r\n      console.log('Dados Sanitizados:', sanitizedData);\r\n    } else {\r\n      console.warn('Formulário inválido. Corrija os erros.');\r\n      this.form.markAllAsTouched();\r\n    }\r\n  }\r\n  \r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".form {\r\n    width: 390px;\r\n    background-color: #19202b;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    color: white;\r\n    height: 100vh;\r\n    transition: width 0.3s ease;\r\n  \r\n    &.expanded {\r\n      width: 500px;\r\n    }\r\n  }\r\n  \r\n  .form-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 16px;\r\n    max-width: 400px;\r\n    margin: auto;\r\n  \r\n    .custom-input {\r\n      width: 100%;\r\n      color: white;\r\n    }\r\n  \r\n    .custom-name-field {\r\n      font-weight: bold;\r\n      color: white;\r\n    }\r\n  \r\n    .button-container {\r\n      display: flex;\r\n      gap: 10px;\r\n      justify-content: center;\r\n      align-items: center;\r\n      width: 100%;\r\n    }\r\n  \r\n    button {\r\n      margin-top: 0;\r\n      flex: 1;\r\n      padding: 10px 20px;\r\n      border-radius: 5px;\r\n      border: none;\r\n      cursor: pointer;\r\n      font-size: 14px;\r\n      align-self: auto;\r\n  \r\n      &.btn-primary {\r\n        color: #fff;\r\n        background-color: #4e5c6e;\r\n  \r\n        &:hover {\r\n          background-color: #3b495e;\r\n          transform: translateY(-2px);\r\n        }\r\n      }\r\n  \r\n      &.btn-secondary {\r\n        color: #4e5c6e;\r\n        background-color: #f1f1f1;\r\n  \r\n        &:hover {\r\n          background-color: #e2e2e2;\r\n          transform: translateY(-2px);\r\n        }\r\n      }\r\n    }\r\n  \r\n    .form-fields {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      gap: 16px;\r\n  \r\n      mat-form-field {\r\n        flex: 1 1 100%;\r\n        max-width: 100%;\r\n  \r\n        &.half-width {\r\n          flex: 1 1 48%;\r\n        }\r\n  \r\n        input {\r\n          color: white;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  .welcome-text {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    color: white;\r\n \r\n\r\n    text-align: center;\r\n  }\r\n  \r\n  .welcome-text span {\r\n    font-size: 1.7em;\r\n    font-weight: bold;\r\n    color: #fff;\r\n    background-image: linear-gradient(to right, #6a82fb, #fc5c7d);\r\n    -webkit-background-clip: text;\r\n    color: transparent;\r\n    animation: fadeIn 1s ease-in-out;\r\n  }\r\n  \r\n  @keyframes fadeIn {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n  \r\n  .forget-password {\r\n    font-size: small;\r\n    justify-content: end;\r\n    display: flex;\r\n  }\r\n  \r\n  .login {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    color: white;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .google-button {\r\n    color: rgb(0, 0, 0);\r\n    margin: 20px;\r\n    width: 100%;\r\n    padding: 10px 20px;\r\n    border: none;\r\n    border-radius: 20px;\r\n    background-color: #ffffff;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n    transition: background-color 0.3s ease;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  \r\n  .google-button:hover {\r\n    background-color: #f0f0f0;\r\n  }\r\n  \r\n  .google-icon {\r\n    width: 20px;\r\n    height: 20px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .or-separator {\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    margin: 20px 0;\r\n  }\r\n  \r\n  .or-separator span {\r\n    padding: 0 10px;\r\n    z-index: 1;\r\n    position: relative;\r\n  }\r\n  \r\n  .or-separator::before,\r\n  .or-separator::after {\r\n    content: \"\";\r\n    flex-grow: 1;\r\n    height: 1px;\r\n    background-color: #ccc;\r\n  }\r\n  \r\n\r\n",
                    "styleUrl": "./sign-up-form-component.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 42,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"form-container\">\r\n\r\n    <div class=\"form-fields\">\r\n\r\n        <div class=\"welcome-text\">\r\n            <span>Quase lá! Complete seu cadastro.</span>\r\n        </div>\r\n\r\n        <mat-form-field appearance=\"outline\" class=\"custom-input\">\r\n            <mat-label>Nome Completo</mat-label>\r\n            <input matInput id=\"fullName\" formControlName=\"fullName\" type=\"text\" required\r\n                placeholder=\"Digite seu nome completo\" />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" class=\"custom-input\">\r\n            <mat-label>Email</mat-label>\r\n            <input matInput id=\"email\" formControlName=\"email\" type=\"email\" required title=\"Email\" placeholder=\"Digite seu email\" />\r\n        </mat-form-field>\r\n\r\n    </div>\r\n    <mat-form-field appearance=\"outline\" class=\"custom-input custom-input-relative\">\r\n        <mat-label>Senha</mat-label>\r\n        <input matInput id=\"password\" formControlName=\"password\" [type]=\"hidePassword ? 'password' : 'text'\" required\r\n            title=\"Senha\" />\r\n        <button type=\"button\" mat-icon-button matSuffix (click)=\"hidePassword = !hidePassword\"\r\n            [attr.aria-label]=\"'Toggle password visibility'\" [attr.aria-pressed]=\"hidePassword\"\r\n            class=\"toggle-password-button\">\r\n            style=\"margin-right: 8px; display: flex; align-items: center; font-size: 20px; padding: 0; height: 36px;\r\n            width: 36px;\">\r\n            <mat-icon class=\"icon-style\">\r\n                {{ hidePassword ? 'visibility_off' : 'visibility' }}\r\n            </mat-icon>\r\n        </button>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"outline\" class=\"custom-input custom-input-relative\">\r\n        <mat-label>Confirmar Senha</mat-label>\r\n        <input matInput id=\"confirmPassword\" formControlName=\"confirmPassword\"\r\n            [type]=\"hideConfirmPassword ? 'password' : 'text'\" required title=\"Confirmar Senha\"\r\n            placeholder=\"Confirme sua senha\" />\r\n        <button mat-icon-button matSuffix type=\"button\" (click)=\"hideConfirmPassword = !hideConfirmPassword\"\r\n            [attr.aria-label]=\"'Toggle confirm password visibility'\" [attr.aria-pressed]=\"hideConfirmPassword\"\r\n            class=\"toggle-confirm-password-button\">\r\n            <mat-icon class=\"icon-style\">\r\n                {{ hideConfirmPassword ? 'visibility_off' : 'visibility' }}\r\n            </mat-icon>\r\n        </button>\r\n        <div *ngIf=\"form.get('confirmPassword')?.touched && form.get('confirmPassword')?.invalid\">\r\n            <small class=\"text-danger\">As senhas não são iguais.</small>\r\n        </div>\r\n    </mat-form-field>\r\n\r\n\r\n\r\n    <div class=\"button-container\">\r\n        <button type=\"button\" class=\"btn-secondary\" (click)=\"changeToSingIn()\">Voltar</button>\r\n        <button type=\"submit\" class=\"btn-primary\">Finalizar Cadastro</button>\r\n    </div>\r\n</form>"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-69b637a7a761b30308c7d12387d27e96794c18045b7c1ece23441ed5fdac57c58b41d8affa722c1232579eb325339d0930e15a54af3d112dfffdbee1dd97ec4d",
            "file": "src/app/core/components/entity-creation/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-table',\r\n  imports: [],\r\n  templateUrl: './table.component.html',\r\n  styleUrl: './table.component.scss'\r\n})\r\nexport class TableComponent {\r\n\r\n}\r\n",
            "styleUrl": "./table.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"table-container\">\r\n    <div class=\"header\">\r\n      <div class=\"title\">Gastos Mensais</div>\r\n\r\n    </div>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Price</th>\r\n          <th>Amount</th>\r\n          <th>Total</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>89.03</td>\r\n          <td>0.15</td>\r\n          <td>$126.00</td>\r\n        </tr>\r\n        <tr>\r\n          <td>94.02</td>\r\n          <td>0.18</td>\r\n          <td>$126.00</td>\r\n        </tr>\r\n        <tr>\r\n          <td>92.06</td>\r\n          <td>0.22</td>\r\n          <td>$252.00</td>\r\n        </tr>\r\n        <tr>\r\n          <td>95.20</td>\r\n          <td>0.26</td>\r\n          <td>$176.00</td>\r\n        </tr>\r\n        <tr>\r\n          <td>95.30</td>\r\n          <td>0.31</td>\r\n          <td>$226.00</td>\r\n        </tr>\r\n        <tr>\r\n          <td>92.01</td>\r\n          <td>0.35</td>\r\n          <td>$2,326.00</td>\r\n        </tr>\r\n        <tr>\r\n          <td>97.34</td>\r\n          <td>0.53</td>\r\n          <td>$2,243.00</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  "
        },
        {
            "name": "TimeComponent",
            "id": "component-TimeComponent-61402f57e3d72b259e3629a8190ecff18740ecba773fcc81f1f0fa403e5c5925d77899a3cb39d5fc6019f4d67d5a2ea7900e941c82f519c1198744e951fd5f4c",
            "file": "src/app/core/components/entity-creation/time/time.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-time",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./time.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "datePickerButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'datePickerButton'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "selectedDateRange",
                    "defaultValue": "new Date().toDateString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "selectedTime",
                    "defaultValue": "'24h'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "showTimeOptions",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "times",
                    "defaultValue": "this.generateTimeOptions()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "formatTime",
                    "args": [
                        {
                            "name": "hours",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "hours",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generateTimeOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onTimeChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "ChartComponentComponent",
                    "type": "component"
                },
                {
                    "name": "ExpenseCardComponent",
                    "type": "component"
                },
                {
                    "name": "MatListModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "TableComponent",
                    "type": "component"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatListModule",
                    "type": "module"
                },
                {
                    "name": "MatMenuModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectorRef, Component, ElementRef, ViewChild } from '@angular/core';\r\nimport flatpickr from 'flatpickr';\r\nimport { ChartComponentComponent } from 'app/core/components/dashboard/chart-component/chart-component.component';\r\nimport { ExpenseCardComponent } from 'app/core/components/dashboard/expense-card/expense-card.component';\r\nimport { TableComponent } from 'app/core/components/entity-creation/table/table.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIcon, MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n@Component({\r\n  selector: 'app-time',\r\n   imports: [ChartComponentComponent, ExpenseCardComponent, MatListModule, MatFormFieldModule, TableComponent, FormsModule, CommonModule, MatListModule, MatMenuModule, MatIconModule],\r\n  templateUrl: './time.component.html',\r\n  styleUrl: './time.component.scss'\r\n})\r\nexport class TimeComponent {\r\n  @ViewChild('datePickerButton') datePickerButton!: ElementRef;\r\n  selectedDateRange: string = new Date().toDateString();\r\n  selectedTime: string = '24h';\r\n  showTimeOptions: boolean = false\r\n  times: string[] = this.generateTimeOptions();\r\n  constructor(private cdr: ChangeDetectorRef) { }\r\n  generateTimeOptions(): string[] {\r\n    const times = [];\r\n    let hours = 0;\r\n    while (hours < 24) {\r\n      const time = this.formatTime(hours);\r\n      times.push(time);\r\n      hours += 6;\r\n    }\r\n    return times;\r\n  }\r\n  formatTime(hours: number): string {\r\n    const formattedHours = hours < 10 ? '0' + hours : hours;\r\n    return `${formattedHours}:00`;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      flatpickr(this.datePickerButton.nativeElement, {\r\n        mode: 'range',\r\n        dateFormat: 'M d',\r\n        onClose: (selectedDates, dateStr) => {\r\n          if (selectedDates.length === 2) {\r\n            const startDate = selectedDates[0].toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\r\n            const endDate = selectedDates[1].toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\r\n            this.selectedDateRange = `${startDate} - ${endDate}`;\r\n          }\r\n        }\r\n      });\r\n    }, 0);\r\n  }\r\n  onTimeChange(event: any) {\r\n    console.log('Horário selecionado:', this.selectedTime);\r\n  }\r\n}\r\n",
            "styleUrl": "./time.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"flex-container\">\r\n    <div class=\"button button-light\">\r\n      <mat-icon>calendar_month</mat-icon><input #datePickerButton type=\"text\"  [value]=\"selectedDateRange\" readonly title=\"Select Date\" placeholder=\"Select Date\">\r\n    </div>\r\n    <div class=\"selectedTime-container\">\r\n      <div class=\"selectedTime\">\r\n        <mat-icon>schedule</mat-icon>\r\n        <mat-form-field>\r\n          <mat-select placeholder=\"Favorite food\">\r\n            <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\r\n              {{ food.viewValue }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        \r\n      </div>\r\n    </div>\r\n    \r\n  </div>\r\n  "
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "angularApp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new AngularNodeAppEngine()"
            },
            {
                "name": "app",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "express()"
            },
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideClientHydration(withEventReplay()), provideAnimationsAsync(),  provideHttpClient()]\r\n}"
            },
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n    providers: [provideRouter(routes, withDebugTracing())]\r\n}"
            },
            {
                "name": "bootstrap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/main.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => bootstrapApplication(AppComponent, config)"
            },
            {
                "name": "browserDistFolder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "resolve(serverDistFolder, '../browser')"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/components/dashboard/chart-component/chart-componen.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  name: 'Gráfico Padrão',\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/components/dashboard/expense-card/expense-card.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    args: {},\r\n    name: 'Expense Card',\r\n    render: (args) => ({\r\n        component: ExpenseCardComponent,\r\n        props: args,\r\n    })\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/components/auth/reset-password/reset-password.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/components/auth/new-password/new-password.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "reqHandler",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createNodeRequestHandler(app)",
                "rawdescription": "The request handler used by the Angular CLI (dev-server and during build).",
                "description": "<p>The request handler used by the Angular CLI (dev-server and during build).</p>\n"
            },
            {
                "name": "serverConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [\r\n    provideServerRendering(),\r\n    provideServerRoutesConfig(serverRoutes)\r\n  ]\r\n}"
            },
            {
                "name": "serverDistFolder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "dirname(fileURLToPath(import.meta.url))"
            },
            {
                "name": "serverRoutes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.routes.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ServerRoute[]",
                "defaultValue": "[\r\n  {\r\n    path: '**',\r\n    renderMode: RenderMode.Prerender\r\n  }\r\n]"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/components/auth/reset-password/reset-password.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "(args) => ({\r\n  component: ResetPasswordComponent,\r\n  props: {\r\n    ...args,\r\n    form: new FormBuilder().group({\r\n      email: [''],\r\n      password: [''],\r\n    }),\r\n    isCodeSent: false,\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/components/auth/new-password/new-password.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn",
                "defaultValue": "(args) => ({\r\n  component: NewPasswordComponent,\r\n  props: {\r\n    ...args,\r\n    passwordForm: new FormBuilder().group({\r\n      newPassword: ['', [Validators.required, Validators.minLength(8), Validators.pattern(/^(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)]],\r\n      confirmPassword: ['', [Validators.required]],\r\n    }),\r\n  },\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ChartComponentComponent>",
                "file": "src/app/core/components/dashboard/chart-component/chart-componen.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ExpenseCardComponent>",
                "file": "src/app/core/components/dashboard/expense-card/expense-card.stories.tsx",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [
            {
                "name": "State",
                "childs": [
                    {
                        "name": "NEW",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "NEW"
                    },
                    {
                        "name": "MODIFIED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "MODIFIED"
                    },
                    {
                        "name": "DELETED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "DELETED"
                    },
                    {
                        "name": "ORIGINAL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "ORIGINAL"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/core/enum/state.enum.ts"
            }
        ],
        "groupedVariables": {
            "src/server.ts": [
                {
                    "name": "angularApp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new AngularNodeAppEngine()"
                },
                {
                    "name": "app",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "express()"
                },
                {
                    "name": "browserDistFolder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "resolve(serverDistFolder, '../browser')"
                },
                {
                    "name": "reqHandler",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createNodeRequestHandler(app)",
                    "rawdescription": "The request handler used by the Angular CLI (dev-server and during build).",
                    "description": "<p>The request handler used by the Angular CLI (dev-server and during build).</p>\n"
                },
                {
                    "name": "serverDistFolder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "dirname(fileURLToPath(import.meta.url))"
                }
            ],
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideClientHydration(withEventReplay()), provideAnimationsAsync(),  provideHttpClient()]\r\n}"
                }
            ],
            "src/app/app.routes.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n    providers: [provideRouter(routes, withDebugTracing())]\r\n}"
                }
            ],
            "src/main.server.ts": [
                {
                    "name": "bootstrap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/main.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => bootstrapApplication(AppComponent, config)"
                }
            ],
            "src/app/app.config.server.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
                },
                {
                    "name": "serverConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [\r\n    provideServerRendering(),\r\n    provideServerRoutesConfig(serverRoutes)\r\n  ]\r\n}"
                }
            ],
            "src/app/core/components/dashboard/chart-component/chart-componen.stories.tsx": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/components/dashboard/chart-component/chart-componen.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  name: 'Gráfico Padrão',\r\n}"
                }
            ],
            "src/app/core/components/dashboard/expense-card/expense-card.stories.tsx": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/components/dashboard/expense-card/expense-card.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    args: {},\r\n    name: 'Expense Card',\r\n    render: (args) => ({\r\n        component: ExpenseCardComponent,\r\n        props: args,\r\n    })\r\n}"
                }
            ],
            "src/app/core/components/auth/reset-password/reset-password.stories.tsx": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/components/auth/reset-password/reset-password.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/components/auth/reset-password/reset-password.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "(args) => ({\r\n  component: ResetPasswordComponent,\r\n  props: {\r\n    ...args,\r\n    form: new FormBuilder().group({\r\n      email: [''],\r\n      password: [''],\r\n    }),\r\n    isCodeSent: false,\r\n  },\r\n})"
                }
            ],
            "src/app/core/components/auth/new-password/new-password.stories.tsx": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/components/auth/new-password/new-password.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/components/auth/new-password/new-password.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn",
                    "defaultValue": "(args) => ({\r\n  component: NewPasswordComponent,\r\n  props: {\r\n    ...args,\r\n    passwordForm: new FormBuilder().group({\r\n      newPassword: ['', [Validators.required, Validators.minLength(8), Validators.pattern(/^(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)]],\r\n      confirmPassword: ['', [Validators.required]],\r\n    }),\r\n  },\r\n})"
                }
            ],
            "src/app/app.routes.server.ts": [
                {
                    "name": "serverRoutes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.routes.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ServerRoute[]",
                    "defaultValue": "[\r\n  {\r\n    path: '**',\r\n    renderMode: RenderMode.Prerender\r\n  }\r\n]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/core/enum/state.enum.ts": [
                {
                    "name": "State",
                    "childs": [
                        {
                            "name": "NEW",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "NEW"
                        },
                        {
                            "name": "MODIFIED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "MODIFIED"
                        },
                        {
                            "name": "DELETED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "DELETED"
                        },
                        {
                            "name": "ORIGINAL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "ORIGINAL"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/core/enum/state.enum.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/core/components/dashboard/chart-component/chart-componen.stories.tsx": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ChartComponentComponent>",
                    "file": "src/app/core/components/dashboard/chart-component/chart-componen.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/core/components/dashboard/expense-card/expense-card.stories.tsx": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ExpenseCardComponent>",
                    "file": "src/app/core/components/dashboard/expense-card/expense-card.stories.tsx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 13,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "serverConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.routes.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "serverRoutes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuard",
                "coveragePercent": 33,
                "coverageCount": "1/3",
                "status": "medium"
            },
            {
                "filePath": "src/app/cadastro-despesa/cadastro-despesa.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CadastroDespesaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/auth/code-password/code-password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CodePasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/auth/new-password/new-password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewPasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/auth/new-password/new-password.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/auth/new-password/new-password.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/auth/reset-password/reset-password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ResetPasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/auth/reset-password/reset-password.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/auth/reset-password/reset-password.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/auth/service/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 66,
                "coverageCount": "6/9",
                "status": "good"
            },
            {
                "filePath": "src/app/core/components/auth/sign-in-form-component/sign-in-form-component.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignInFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/auth/sign-up-form-component/sign-up-form-component.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignUpFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/dashboard/chart-component/chart-componen.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/dashboard/chart-component/chart-componen.stories.tsx",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/dashboard/chart-component/chart-component.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChartComponentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/dashboard/expense-card/expense-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExpenseCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/dashboard/expense-card/expense-card.stories.tsx",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/dashboard/expense-card/expense-card.stories.tsx",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/entity-creation/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/entity-creation/time/time.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TimeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/nav-bar/nav-bar/nav-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/bill.mode.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Bill",
                "coveragePercent": 68,
                "coverageCount": "17/25",
                "status": "good"
            },
            {
                "filePath": "src/app/core/models/classification/category.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Category",
                "coveragePercent": 65,
                "coverageCount": "17/26",
                "status": "good"
            },
            {
                "filePath": "src/app/core/models/classification/i-category.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICategory",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/financial-data.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "FinancialData",
                "coveragePercent": 58,
                "coverageCount": "17/29",
                "status": "good"
            },
            {
                "filePath": "src/app/core/models/i-bill.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IBill",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/i-financial-data.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IFinancialData",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/i-payment-status.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IPaymentStatus",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/i-state.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IModelState",
                "coveragePercent": 11,
                "coverageCount": "1/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/i-user.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IUser",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/payment-status.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PaymentStatus",
                "coveragePercent": 77,
                "coverageCount": "17/22",
                "status": "very-good"
            },
            {
                "filePath": "src/app/core/models/state.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ModelState",
                "coveragePercent": 100,
                "coverageCount": "19/19",
                "status": "very-good"
            },
            {
                "filePath": "src/app/core/models/user.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "User",
                "coveragePercent": 48,
                "coverageCount": "17/35",
                "status": "medium"
            },
            {
                "filePath": "src/app/core/services/state.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "EstadoService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/main.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bootstrap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "angularApp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "app",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "browserDistFolder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reqHandler",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "serverDistFolder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}